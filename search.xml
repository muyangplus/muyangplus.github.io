<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022年3月学习记录</title>
    <url>/posts/9df3cc93/</url>
    <content><![CDATA[<h2 id="使用技巧">使用技巧</h2>
<h3 id="变量声明">变量声明</h3>
<p>声明变量时一定要赋值！！！！！<br>
未定义的一维数组放在 int main() 里会生成随机数！</p>
<h3 id="类型参数">类型参数</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br></pre></td></tr></table></figure>
<p>原来使用 int、float、char 等内置类型的地方，都可以用类型参数来代替。</p>
<p>int len = (int) sizeof(arr) / sizeof(*arr);<br>
计算动态数组长度公式：用数组占用空间除以指针占用空间</p>
<h3 id="get函数">get函数</h3>
<p>gets()函数在C++14中被完全删除了，编译时会报错：</p>
<p>‘gets’ was not declared in this scope</p>
<p>相关功能可以用fgets()函数代替。</p>
<h3 id="命名空间">命名空间</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">&lt;algorithm&gt;</span><br></pre></td></tr></table></figure>
<h2 id="算法相关">算法相关</h2>
<h3 id="递归算法">递归算法</h3>
<p>时间复杂程度：O(log2n)<br>
注意：一定要设置结束条件！！！<br>
使用方法：<br>
1.return 函数本身<br>
2.直接调用</p>
<h3 id="杨辉三角">杨辉三角</h3>
<p>公式一：<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[i][j] = a[i - 1][j] + a[i - 1][j - 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p>
<p>公式二：<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo>=</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sum = sum * (i - j + 1)/(j - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p>
<h3 id="信息学奥赛一本通在线题库">信息学奥赛一本通在线题库</h3>
<blockquote>
<p><a href="http://ybt.ssoier.cn:8088">http://ybt.ssoier.cn:8088</a></p>
</blockquote>
<h2 id="一些题目">一些题目</h2>
<div class="note info no-icon flat"><p>以下排序算法中，不需要进行关键字比较操作的算法是（ ）。<br>
A. 基数排序<br>
B. 冒泡排序<br>
C. 堆排序<br>
D. 直接插入排序</p>
</div>
<div class="note info no-icon flat"><p>设 x=true, y=true, z=false，以下逻辑运算表达式值为真的是（ ）。<br>
A. (y∨z)∧x∧z<br>
B. x∧(z∨y) ∧z<br>
C. (x∧y) ∧z<br>
D. (x∧y)∨(z∨x)</p>
</div>
<h2 id="参考资料">参考资料</h2>
<h3 id="真题">真题</h3>
<blockquote>
<p><a href="https://ti.luogu.com.cn">https://ti.luogu.com.cn</a></p>
</blockquote>
<h3 id="几种排序算法">几种排序算法</h3>
<blockquote>
<p><a href="https://www.cnblogs.com/rope/p/12119391.html">https://www.cnblogs.com/rope/p/12119391.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年4月学习记录 - 时间复杂度总结</title>
    <url>/posts/9685fddf/</url>
    <content><![CDATA[<div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">更新记录</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022年4月学习记录 - 时间复杂度总结</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-12-15 链接修复</p>
</div></div><div class='timeline-item-content'><ol>
<li>链接修复：文章跳转链接修复</li>
</ol>
</div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<blockquote>
<p>本文只是时间复杂度的简单介绍，学习做题请前往<a href="/posts/bfc79706/">2022年9月学习记录 - 时间复杂度题目训练</a></p>
</blockquote>
<h2 id="时间复杂度">时间复杂度</h2>
<h3 id="常见的时间复杂度">常见的时间复杂度</h3>
<div class="note info simple"><p>1.常数阶O(1)<br>
2.对数阶O(log2n)<br>
3.线性阶O(n)<br>
4.线性对数阶O(nlog2n)<br>
5.平方阶O(n2)<br>
6.立方阶O(n3)<br>
7.k次方阶O(nk)<br>
8.指数阶O(2n)</p>
</div>
<h3 id="最坏时间和平均时间">最坏时间和平均时间</h3>
<p>最坏情况下的时间复杂度是算法在任何输入实例上运行时间的上界，这就保证了算法的运行时间不会比任何更长。</p>
<p>在最坏情况下的时间复杂度为T(n)=O(n)，它表示对于任何输入实例,该算法的运行时间不可能大于O(n)。</p>
<p>平均时间复杂度是指所有可能的输入实例均以等概率出现的情况下，算法的期望运行时间。</p>
<h3 id="计算方法">计算方法</h3>
<div class="note info simple"><p>求解算法的时间复杂度的具体步骤是：<br>
⑴ 找出算法中的基本语句：算法中执行次数最多的那条语句就是基本语句，通常是最内层循环的循环体。<br>
⑵ 计算基本语句的执行次数的数量级：只需计算基本语句执行次数的数量级，这就意味着只要保证基本语句执行次数的函数中的最高次幂正确即可，可以忽略所有低次幂和最高次幂的系数。这样能够简化算法分析，并且使注意力集中在最重要的一点上：增长率。<br>
⑶ 用大Ο记号表示算法的时间性能：将基本语句执行次数的数量级放入大Ο记号中。</p>
</div>
<h3 id="具体实例">具体实例</h3>
<h4 id="O-1">O(1)</h4>
<p>常数阶，即时间复杂度不随着规模n的增大而增大。如果算法的执行时间不随着问题规模n的增加而增长，即使算法中有上千条语句，其执行时间也不过是一个较大的常数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x=<span class="number">91</span>; </span><br><span class="line"><span class="type">int</span> y=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">while</span>(y&gt;<span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">100</span>) &#123;</span><br><span class="line">        x=x<span class="number">-10</span>;</span><br><span class="line">        y--;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    x++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>T(n)=O(1)</p>
<p>这个程序看起来有点吓人，总共循环运行了1000次，但是这段程序并没有n，因此它只是一个常数阶的函数</p>
<h4 id="O-n">O(n)</h4>
<p>一次阶时间复杂度。耗费的时间与规模n成一阶线性关系。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line">    cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="O-n-3">O(n^3)</h4>
<p>三阶线性关系。（n阶线性以此类推即可。）就好像矩阵相乘就永远是O（n^3 ）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i != n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j != i; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; j != j; k++) &#123;</span><br><span class="line">            total++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>内循环的执行次数虽然与问题规模n没有直接关系，但是却与外层循环的变量取值有关，而最外层循环的次数直接与n有关，因此可以从内层循环向外层分析语句的执行次数：则该程序段的时间复杂度为</p>
<p>T(n)=O(n^3 /6+低次项)=O(n^3)</p>
<h3 id="常见的算法时间复杂度由小到大">常见的算法时间复杂度由小到大</h3>
<p>Ο(1)＜Ο(log2(n))＜Ο(n)＜Ο(nlog2(n))＜Ο(n^2) ＜Ο(n^3) ＜…＜Ο(2^n) ＜Ο(n!)</p>
<h3 id="分析法则">分析法则</h3>
<p>在计算算法时间复杂度时有以下几个简单的程序分析法则:</p>
<div class="note info simple"><p>1.对于一些简单的输入输出语句或赋值语句,近似认为需要O(1)时间</p>
<p>2.对于顺序结构,需要依次执行一系列语句所用的时间可采用大O下”求和法则”</p>
<p>3.求和法则:是指若算法的2个部分时间复杂度分别为 T1(n)=O(f(n))和 T2(n)=O(g(n)),则 T1(n)+T2(n)=O(max(f(n), g(n)))</p>
<p>特别地,若T1(m)=O(f(m)), T2(n)=O(g(n)),则 T1(m)+T2(n)=O(f(m) + g(n))<br>
3.对于选择结构,如if语句,它的主要时间耗费是在执行then字句或else字句所用的时间,需注意的是检验条件也需要O(1)时间</p>
<p>4.对于循环结构,循环语句的运行时间主要体现在多次迭代中执行循环体以及检验循环条件的时间耗费,一般可用大O下”乘法法则”</p>
<p>乘法法则: 是指若算法的2个部分时间复杂度分别为 T1(n)=O(f(n))和 T2(n)=O(g(n)),则 T1*T2=O(f(n)*g(n))</p>
<p>5.对于复杂的算法,可以将它分成几个容易估算的部分,然后利用求和法则和乘法法则技术整个算法的时间复杂度</p>
</div>
<p>另外还有以下2个运算法则:</p>
<div class="note info simple"><p>(1) 若g(n)=O(f(n)),则O(f(n))+ O(g(n))= O(f(n))</p>
<p>(2) O(Cf(n)) = O(f(n)),其中C是一个正常数</p>
</div>
<h3 id="参考资料">参考资料</h3>
<p><a href="https://blog.csdn.net/stary_yan/article/details/51383480">[C++]时间复杂度&amp;空间复杂度</a></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>时间复杂度</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年5月学习记录</title>
    <url>/posts/ce62a577/</url>
    <content><![CDATA[<h2 id="OpenCV">OpenCV</h2>
<h3 id="参考资料">参考资料</h3>
<p><a href="https://blog.csdn.net/weixin_44297922/article/details/121496280">基于Opencv实现的简易汉字识别</a></p>
<p><a href="https://blog.csdn.net/iracer/article/details/116051674">OpenCV4机器学习算法原理与编程实战（附部分模型下载地址）</a></p>
<p><a href="https://blog.csdn.net/hacker_NO_007/article/details/123470483">戴口罩情境下的人脸识别demo</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/107719641">开源人脸口罩检测数据+模型+代码+在线网页体验，通通都开源</a></p>
<h3 id="二维码识别">二维码识别</h3>
<p>Detect 只检测<br>
Decode 只解析<br>
DetectAndDecode 检测并解析</p>
<h2 id="卷积神经网络">卷积神经网络</h2>
<h3 id="参考资料-2">参考资料</h3>
<p>xxxxxxxxxx4 1long long gcd(long long a,long long b){2    cout&lt;&lt;“a=”&lt;&lt;a&lt;&lt;“,b=”&lt;&lt;b&lt;&lt;endl;3    return !(a%b)?b:gcd(b,a%b);4}C++</p>
<h3 id="forward-beackword-数据计算">forward/beackword 数据计算</h3>
<p>顺推和逆推</p>
<h2 id="卷积">卷积</h2>
<h3 id="关键词">关键词</h3>
<p>集散卷积</p>
<p>连续卷积</p>
<h3 id="参考资料：">参考资料：</h3>
<p><a href="https://blog.csdn.net/bitcarmanlee/article/details/54729807">最容易理解的对卷积(convolution)的解释</a></p>
<h2 id="交叉熵">交叉熵</h2>
<h3 id="关键词-2">关键词</h3>
<p>贝叶斯决策理论</p>
<p>拟然函数</p>
<p>概率密度函数</p>
<h3 id="参考资料：-2">参考资料：</h3>
<p><a href="https://zhuanlan.zhihu.com/p/115277553">损失函数：交叉熵详解</a></p>
<h2 id="VS编译错误总结">VS编译错误总结</h2>
<h3 id="LINK2005-和-C2352">LINK2005 和 C2352</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Sample</span> &#123;</span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">test1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Sample::<span class="built_in">test1</span>();</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年6月学习记录</title>
    <url>/posts/e7aa1185/</url>
    <content><![CDATA[<h2 id="Dev-c">Dev-c++</h2>
<p>编译参数</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">-std=c++<span class="number">14</span> -Wall -fno-ms-extensions</span><br></pre></td></tr></table></figure>
<h2 id="CMake">CMake</h2>
<h2 id="解题公式">解题公式</h2>
<h3 id="巧用位移解题">巧用位移解题</h3>
<ul>
<li>2的n次幂 ===&gt; (1&lt;&lt;n）</li>
</ul>
<h3 id="求最小公倍数">求最小公倍数</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">gcd</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a,<span class="type">long</span> <span class="type">long</span> b)</span></span>&#123;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;<span class="string">&quot;,b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> !(a%b)?b:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年7月学习记录</title>
    <url>/posts/49c28014/</url>
    <content><![CDATA[<h2 id="好公式">好公式</h2>
<p>将变量设为0</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">memset</span>(变量名,<span class="number">0</span>,<span class="built_in">sizeof</span>(变量名))</span><br></pre></td></tr></table></figure>
<h2 id="刷题ing">刷题ing</h2>
<h3 id="【模板】快速排序">【模板】快速排序</h3>
<p>其实就是 STL 的 sort</p>
<h4 id="题目链接">题目链接</h4>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1177">P1177 【模板】快速排序</a></li>
</ul>
<h4 id="动态演示">动态演示</h4>
<p><img src="/assets/image/posts/49c28014/QuickSort.gif" alt="QuickSort.gif"></p>
<h4 id="代码实现">代码实现</h4>
<p>使用 C++ STL sort</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line"> cin&gt;&gt;n;</span><br><span class="line"> <span class="type">int</span> num[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">  cin&gt;&gt;num[i];</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="built_in">sort</span>(num,num+n);</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">  cout&lt;&lt;num[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>手写快排</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">QuickSort</span><span class="params">(<span class="type">int</span>* num,<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> mid=num[(l+r)/<span class="number">2</span>];</span><br><span class="line">    <span class="type">int</span> i=l,j=r;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(num[i]&lt;mid) i++;</span><br><span class="line">        <span class="keyword">while</span>(num[j]&gt;mid) j--;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;=j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">swap</span>(num[i],num[j]);</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>(i&lt;=j);</span><br><span class="line"> <span class="keyword">if</span>(l&lt;j) <span class="built_in">QuickSort</span>(num,l,j);</span><br><span class="line"> <span class="keyword">if</span>(i&lt;r) <span class="built_in">QuickSort</span>(num,i,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line"> cin&gt;&gt;n;</span><br><span class="line"> <span class="type">int</span> num[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  cin&gt;&gt;num[i];</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">QuickSort</span>(num,<span class="number">1</span>,n);</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  cout&lt;&lt;num[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="【模板】程序优化">【模板】程序优化</h3>
<h4 id="题目链接-2">题目链接</h4>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1923">P1923 【深基9.例4】求第 k 小的数</a></li>
</ul>
<h4 id="代码实现-2">代码实现</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//快读</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125; </span><br><span class="line"> <span class="keyword">while</span>(<span class="string">&#x27;0&#x27;</span>&lt;=ch&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125; <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> n,k;</span><br><span class="line"> n=<span class="built_in">read</span>();</span><br><span class="line"> k=<span class="built_in">read</span>();</span><br><span class="line"> <span class="type">int</span> num[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;; </span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123; </span><br><span class="line">  num[i]=<span class="built_in">read</span>();</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">nth_element</span>(num,num+k,num+n);</span><br><span class="line"> cout&lt;&lt;num[k];</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="【算法】深度优先探索">【算法】深度优先探索</h3>
<h4 id="代码实现-3">代码实现</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> step=<span class="number">1</span>)</span></span>&#123;</span><br><span class="line"> <span class="type">static</span> <span class="type">int</span> ans[<span class="number">11</span>],book[<span class="number">11</span>],sum=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">if</span>(step==n)&#123;</span><br><span class="line">  sum++;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">   cout&lt;&lt;ans[i];</span><br><span class="line">  &#125;</span><br><span class="line">  cout&lt;&lt;endl;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(book[i]==<span class="number">0</span>)&#123;</span><br><span class="line">   ans[step]=i;</span><br><span class="line">   book[i]=<span class="number">1</span>;</span><br><span class="line">   <span class="built_in">dfs</span>(n,step+<span class="number">1</span>);</span><br><span class="line">   book[i]=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line"> cin&gt;&gt;n;</span><br><span class="line"> cout&lt;&lt;<span class="built_in">dfs</span>(n)&lt;&lt;endl;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年8月学习记录 - STL</title>
    <url>/posts/b67e9d81/</url>
    <content><![CDATA[<blockquote>
<p>系统学习</p>
<p>建议搭配 <a href="/posts/8956865">2022 年 8 月学习记录 - 队列、栈及其应用</a> 一起使用。</p>
</blockquote>
<h2 id="我的学习资料">我的学习资料</h2>
<blockquote>
<p>BiliBili：<a href="https://www.bilibili.com/video/BV1Rg41117YB">清华算协暑期培训 第二讲 STL &amp; 基础数据结构</a></p>
</blockquote>
<h2 id="栈（Stack）">栈（Stack）</h2>
<p>特征：先进后出/后进先出</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// STL 实现</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line">std::stack&lt;T&gt; s;</span><br><span class="line">s.<span class="built_in">push</span>(x);		<span class="comment">//插入元素</span></span><br><span class="line">s.<span class="built_in">pop</span>();		<span class="comment">//弹出元素</span></span><br><span class="line">s.<span class="built_in">top</span>();		<span class="comment">//查询头元素</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数组实现</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;		<span class="comment">//栈的大小</span></span><br><span class="line">T stack[N];</span><br><span class="line"><span class="type">int</span> top=<span class="number">0</span>;</span><br><span class="line"><span class="comment">// 判断栈是否为空</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">empty</span><span class="params">(<span class="type">int</span> top)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> top==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断栈是否已满</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">full</span><span class="params">(<span class="type">int</span> top)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> top==n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 插入一个元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">push</span><span class="params">(T stack[],T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(full)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    stack[top++]=x;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 弹出一个元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">pop</span><span class="params">(T stack[],T *x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(empty)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=stack[--top];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询头元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">top</span><span class="params">(T stack[],T *x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sempty)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=stack[top];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="卡特兰数-Catalan">卡特兰数(Catalan)</h3>
<p>应用：括号序列、三角剖分、二叉树计算</p>
<h2 id="队列（Queue）">队列（Queue）</h2>
<p>特性：先进先出。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// STL实现</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line">std::queue&lt;T&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(x);		<span class="comment">//插入元素</span></span><br><span class="line">q.<span class="built_in">pop</span>();		<span class="comment">//弹出元素</span></span><br><span class="line">q.<span class="built_in">front</span>();		<span class="comment">//查询头元素</span></span><br><span class="line">q.<span class="built_in">back</span>();		<span class="comment">//查询尾元素</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数组实现</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;		<span class="comment">//队列的大小</span></span><br><span class="line">T queue[N];</span><br><span class="line"><span class="type">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</span><br><span class="line"><span class="comment">// 返回队列大小</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">size</span><span class="params">(T queue[])</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> tail-head;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断队列是否为空</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">empty</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> head==tail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 插入元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">push</span><span class="params">(T queue[],T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    queue[tail++]=x;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 弹出元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">pop</span><span class="params">(T queue[],T *x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(empty)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=queue[head++];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询头元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">front</span><span class="params">(<span class="type">int</span> *x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(empty)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=queue[head];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询尾元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">back</span><span class="params">(<span class="type">int</span> *x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(empty)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=queue[tail];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="向量（Vector）">向量（Vector）</h2>
<p>一句话概括：不定长的数组。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// STL实现</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vertor&gt;</span></span></span><br><span class="line">std::vector&lt;T&gt; v;</span><br><span class="line">v.<span class="built_in">insert</span>(iter,x);		<span class="comment">//在iter处插入元素</span></span><br><span class="line">v.<span class="built_in">push_back</span>();			<span class="comment">//在末尾插入元素</span></span><br><span class="line">v.<span class="built_in">erase</span>(iter);			<span class="comment">//弹出iter处的元素</span></span><br><span class="line">v.<span class="built_in">pop_back</span>();			<span class="comment">//弹出尾元素</span></span><br></pre></td></tr></table></figure>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数组实现</span></span><br><span class="line"><span class="type">int</span> *a = <span class="keyword">new</span> <span class="type">int</span> [N];</span><br></pre></td></tr></table></figure>
<h2 id="列表（List）与链表（linked-list）">列表（List）与链表（linked list）</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// STL实现</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;list&gt;</span></span></span><br><span class="line">std::list&lt;T&gt; l;</span><br><span class="line">l.<span class="built_in">front</span>();				<span class="comment">//查询头元素</span></span><br><span class="line">l.<span class="built_in">back</span>();				<span class="comment">//查询尾元素</span></span><br><span class="line">l.<span class="built_in">insert</span>(iter,x);		<span class="comment">//在iter处插入元素</span></span><br><span class="line">l.<span class="built_in">push_back</span>();			<span class="comment">//在末尾插入元素</span></span><br><span class="line">l.<span class="built_in">push_front</span>();			<span class="comment">//在开头插入元素</span></span><br><span class="line">l.<span class="built_in">erase</span>(iter);			<span class="comment">//弹出iter处的元素</span></span><br><span class="line">l.<span class="built_in">pop_back</span>();			<span class="comment">//弹出尾元素</span></span><br><span class="line">l.<span class="built_in">pop_front</span>();			<span class="comment">//弹出头元素</span></span><br></pre></td></tr></table></figure>
<h3 id="链表的结构">链表的结构</h3>
<h4 id="哨兵节点：">哨兵节点：</h4>
<p>头元素和尾元素的处理：可以不用考虑边界情况</p>
<ul>
<li>use it or 特判</li>
</ul>
<h4 id="单向链表：">单向链表：</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    Node *next;</span><br><span class="line">&#125;;</span><br><span class="line">std::forward_list (C++<span class="number">11</span>)</span><br></pre></td></tr></table></figure>
<h5 id="基本操作-插入">基本操作 - 插入</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Node* <span class="title">insert</span><span class="params">(Node *pos,<span class="type">int</span> value)</span></span>&#123;</span><br><span class="line">    Node *n = <span class="keyword">new</span> <span class="built_in">Node</span>(value);</span><br><span class="line">    n-&gt;next = pos-&gt;next;</span><br><span class="line">    post-&gt;next = n;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 注：代码中的语句顺序不能调换</span></span><br></pre></td></tr></table></figure>
<h5 id="基本操作-删除">基本操作 - 删除</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">erase</span><span class="params">(Node *pos)</span></span>&#123;</span><br><span class="line">    Node *tmp = pos-&gt;next;</span><br><span class="line">    pos-&gt;next = pos-&gt;next-&gt;next;</span><br><span class="line">    <span class="keyword">delete</span> tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="翻转-reverse">翻转 - reverse()</h5>
<p>将一个链表整体翻转</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std::forward_list::<span class="built_in">reverse</span>()</span><br></pre></td></tr></table></figure>
<h4 id="双向链表：">双向链表：</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    Node *prev,*next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h5 id="基本操作-插入-2">基本操作 - 插入</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Node* <span class="title">insert</span><span class="params">(Node *pos,<span class="type">int</span> value)</span></span>&#123;</span><br><span class="line">    Node *n = <span class="keyword">new</span> <span class="built_in">Node</span>(value);</span><br><span class="line">    n-&gt;next = pos-&gt;next;</span><br><span class="line">    n-&gt;prev = pos;</span><br><span class="line">    pos-&gt;next-&gt;prev = n;</span><br><span class="line">    pos-&gt;next = n;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 注：代码中的语句顺序不能调换</span></span><br></pre></td></tr></table></figure>
<h5 id="基本操作-删除-2">基本操作 - 删除</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">erase</span><span class="params">(Node *pos)</span></span>&#123;</span><br><span class="line">    pos-&gt;prev-&gt;next = pos-&gt;next;</span><br><span class="line">    pos-&gt;next-&gt;prev = pos-&gt;prev;</span><br><span class="line">    <span class="keyword">delete</span> pos;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 注：代码中的语句顺序可以调换</span></span><br><span class="line"><span class="comment">//	   STL 的 erase 方法会返回删除之后的原子之后的迭代器，这里为了简化代码就仅返回了 void</span></span><br></pre></td></tr></table></figure>
<h5 id="翻转-reverse-2">翻转 - reverse()</h5>
<p>将一个链表整体翻转</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std::list::<span class="built_in">reverse</span>()</span><br></pre></td></tr></table></figure>
<p>交换 prev 和 next （首尾特别处理）</p>
<h4 id="通用">通用</h4>
<h5 id="基本操作-遍历">基本操作 - 遍历</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (Node* x = head-&gt;next; x != tail; x = x-&gt;next);</span><br></pre></td></tr></table></figure>
<h4 id="一些技巧">一些技巧</h4>
<div class="note warning flat"><p>生产环境中请不要随意使用</p>
</div>
<h5 id="内存池">内存池</h5>
<p>优化 new 和 delete 的时间复杂度</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Node pool[MAXN];</span><br><span class="line"><span class="type">int</span> top;</span><br><span class="line"><span class="function">Node* <span class="title">newnode</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;pool[top++];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="数组下标模拟指针">数组下标模拟指针</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="type">int</span> val,next;</span><br><span class="line">&#125; pool[MAXN];</span><br><span class="line"><span class="type">int</span> top;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">newnode</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> top++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="优先队列（Priority-Queue）">优先队列（Priority Queue）</h2>
<p>特征：“优先级”大的先离开</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line">std::priority_queue&lt;T&gt; pq;</span><br><span class="line">pq.<span class="built_in">push</span>(x);		<span class="comment">//插入一个元素</span></span><br><span class="line">pq.<span class="built_in">pop</span>();		<span class="comment">//弹出最大的元素</span></span><br><span class="line">pq.<span class="built_in">top</span>();		<span class="comment">//查询最大的元素</span></span><br><span class="line"></span><br><span class="line">std:greater&lt;T&gt;	<span class="comment">//反向使用</span></span><br></pre></td></tr></table></figure>
<p>实现：二叉树</p>
<h2 id="其他-STL">其他 STL</h2>
<h4 id="容器类">容器类</h4>
<ol>
<li>
<p>set/map</p>
</li>
<li>
<p>deque</p>
</li>
</ol>
<h4 id="算法类">算法类</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br></pre></td></tr></table></figure>
<ol>
<li>
<p>sort：排序</p>
</li>
<li>
<p>lower_bound：二分查找（<strong>大于等于</strong>）</p>
</li>
<li>
<p>upper_bound：二分查找（<strong>大于</strong>）</p>
</li>
<li>
<p>merge：归并</p>
</li>
</ol>
<h4 id="更多资料"><a href="https://cppreference.com">更多资料</a></h4>
<h2 id="一些应用">一些应用</h2>
<h4 id="单调栈-单调队列">单调栈 单调队列</h4>
<ul>
<li>
<p>例题给出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 天的气温情况，对于每一天，求出前k天的气温最大值。</p>
</li>
<li>
<p>关键的观察：如果存在两个数满足 $ i&lt;j∧a_i&lt;a_j $ ,那么在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>被纳入考察之后，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 就不可能成为最大值了。（<s>如果有人比你年轻还比你强</s>）</p>
</li>
<li>
<p>那么我们需要考虑的可能值是单调递减的。</p>
</li>
<li>
<p>从左到右扫描，每加入一个数，可以排除最末尾的一段数的可能性。</p>
</li>
<li>
<p>同时我们只需要维护前k天的情况，因此过期的数据也可排除。</p>
</li>
<li>
<p>我们需要实现 push_back,pop_back,pop_front。</p>
</li>
</ul>
<h4 id="表达式求值">表达式求值</h4>
<ul>
<li>
<p>为了简化问题，假设我们只有 $ + $ $ - $  $ * $ $ / $ $ () $ 这几种运算。</p>
</li>
<li>
<p>观察：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">1+2*3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∗</mo><mn>2</mn><mo>+</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">1*2+3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span> 。我们什么时候可以确定计算顺序？</p>
</li>
<li>
<p>第一个等式需要到最末尾，第二个等式在扫描到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">+</span></span></span></span> 的时候就发现可以计算前面的内容。</p>
</li>
<li>
<p>无法判断的式子优先级大小递增。</p>
</li>
<li>
<p>类似单调队列的单调栈。同时需要维护没有计算的数。</p>
</li>
<li>
<p>将括号也纳入优先级比较的范围，或者每遇到一层括号，括号内优先级增加一档。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年8月学习记录 - 动态规划专练</title>
    <url>/posts/86fa511b/</url>
    <content><![CDATA[<div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">更新记录</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022年8月学习记录 - 动态规划专练</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-12-10 文章脱敏</p>
</div></div><div class='timeline-item-content'><ol>
<li>文章脱敏：更改了部分字为错别字，用小括号扩出。</li>
</ol>
</div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="我的资料">我的资料</h2>
<blockquote>
<p>NOI官网：<a href="https://www.noi.cn/pxsp/2020-09-15/717309.shtml">简单动态规划</a></p>
</blockquote>
<h2 id="动态规划">动态规划</h2>
<ul>
<li>阶段：据空间顺序或时间顺序对问题的求解划分阶段。</li>
<li>状态：描述事物的性质，不同事物有不同的性质，因而用不同的状态来刻画。对问题的求解状态的描述是分阶段的。</li>
<li>决策：对于一个阶段的某个状态，从该状态演变到下一阶段的某个状态的选择。</li>
<li>状态转移方程：用数学公式描述与阶段相关的状态间的演变规律。</li>
<li>最优子结构：以每一步都是最优的来保证全局是最优的。</li>
<li>无后效性：某阶段状态一旦确定。以后的决策就可以直接使用。舍弃的状态，不会在后续决策中被使用。</li>
<li>“动态”的含义：一个决策序列就是在变化的状态中产生出来的，故有“动态”的含义。</li>
</ul>
<h3 id="洛谷题单-动态规划的引入"><a href="https://www.luogu.com.cn/training/211">洛谷题单 动态规划的引入</a></h3>
<h4 id="P1216-USACO1-5-IOI1994-数字三角形-Number-Triangles"><a href="https://www.luogu.com.cn/problem/P1216">P1216 [USACO1.5][IOI1994]数字三角形 Number Triangles</a></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line">	cin&gt;&gt;r;</span><br><span class="line">	<span class="type">int</span> map[r+<span class="number">2</span>][r+<span class="number">2</span>];</span><br><span class="line">	<span class="built_in">memset</span>(map,<span class="number">0</span>,<span class="built_in">sizeof</span>(map));</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;r;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">			cin&gt;&gt;map[i][j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=r<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=i;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">			map[i][j]+=<span class="built_in">max</span>(map[i+<span class="number">1</span>][j],map[i+<span class="number">1</span>][j+<span class="number">1</span>]);</span><br><span class="line">			<span class="comment">//cout&lt;&lt;map[i][j]&lt;&lt;&quot;(i=&quot;&lt;&lt;i&lt;&lt;&quot;,j=&quot;&lt;&lt;j&lt;&lt;&quot;) &quot;;</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;map[<span class="number">0</span>][<span class="number">0</span>]&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="" alt="(单击上方的 &lt; 展开代码)"></p>
<h4 id="P1434-SHOI2002-滑雪"><a href="https://www.luogu.com.cn/problem/P1434">P1434 [SHOI2002] 滑雪</a></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> r=<span class="number">0</span>,c=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> map[<span class="number">105</span>][<span class="number">105</span>],longest[<span class="number">105</span>][<span class="number">105</span>],height[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"><span class="type">int</span> dx[<span class="number">5</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">search</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(longest[x][y]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="type">int</span> maxLength=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">			<span class="type">int</span> nx=x+dx[i];</span><br><span class="line">			<span class="type">int</span> ny=y+dy[i];</span><br><span class="line">			<span class="keyword">if</span>(nx&gt;=<span class="number">0</span> &amp;&amp; nx&lt;=r &amp;&amp; ny&gt;=<span class="number">0</span> &amp;&amp; ny&lt;=c &amp;&amp; map[x][y]&lt;map[nx][ny])&#123;</span><br><span class="line">				<span class="type">int</span> nextLength=<span class="built_in">search</span>(nx,ny);</span><br><span class="line">				<span class="keyword">if</span>(maxLength&lt;nextLength)&#123;</span><br><span class="line">					maxLength=nextLength;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		longest[x][y]=maxLength+<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;x=&quot;&lt;&lt;x&lt;&lt;&quot;,y=&quot;&lt;&lt;y&lt;&lt;&quot;,maxLength=&quot;&lt;&lt;maxLength&lt;&lt;&quot;,longest=&quot;&lt;&lt;longest[x][y]&lt;&lt;endl;</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> longest[x][y]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(map,<span class="number">0</span>,<span class="built_in">sizeof</span>(map));</span><br><span class="line">	<span class="built_in">memset</span>(longest,<span class="number">-1</span>,<span class="built_in">sizeof</span>(longest));</span><br><span class="line">	<span class="built_in">memset</span>(height,<span class="number">0</span>,<span class="built_in">sizeof</span>(height));</span><br><span class="line">	cin&gt;&gt;r&gt;&gt;c;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;r;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;c;j++)&#123;</span><br><span class="line">			cin&gt;&gt;map[i][j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;r;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;c;j++)&#123;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;search(i,j)&lt;&lt;&quot;(i=&quot;&lt;&lt;i&lt;&lt;&quot;,j=&quot;&lt;&lt;j&lt;&lt;&quot;) &quot;;</span></span><br><span class="line">			<span class="keyword">if</span>(ans&lt;<span class="built_in">search</span>(i,j))&#123;</span><br><span class="line">				ans=<span class="built_in">search</span>(i,j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="" alt="(单击上方的 &lt; 展开代码)"></p>
<h4 id="P2196-NOIP1996-提高组-挖地-镭"><a href="https://www.luogu.com.cn/problem/P2196">P2196 [NOIP1996 提高组] 挖地(镭)</a></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">	<span class="type">int</span> to,next;</span><br><span class="line">&#125;edge[<span class="number">25</span>];</span><br><span class="line"><span class="type">int</span> head[<span class="number">25</span>],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">    edge[++cnt].to=v;</span><br><span class="line">	edge[cnt].next=head[u];</span><br><span class="line">	head[u]=cnt;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">30</span>],pre[<span class="number">30</span>],s[<span class="number">30</span>];</span><br><span class="line"><span class="type">int</span> n,w[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dp[u]==<span class="number">0</span>)&#123;</span><br><span class="line">    	<span class="keyword">for</span>(<span class="type">int</span> i=head[u];i!=<span class="number">0</span>;i=edge[i].next)&#123;</span><br><span class="line">    		<span class="type">int</span> v=edge[i].to;</span><br><span class="line">    		<span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">    		dp[v]=<span class="built_in">dfs</span>(v,u);</span><br><span class="line">    		<span class="keyword">if</span>(dp[u]&lt;dp[v])&#123;</span><br><span class="line">    			dp[u]=dp[v];</span><br><span class="line">    			pre[u]=v;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		dp[u]+=w[u];</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">return</span> dp[u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;w[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			<span class="type">int</span> x;</span><br><span class="line">			cin&gt;&gt;x;</span><br><span class="line">			<span class="keyword">if</span>(x&gt;<span class="number">0</span>) <span class="built_in">add</span>(i,j);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> ans=<span class="number">0</span>,k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line">		<span class="type">int</span> tmp=<span class="built_in">dfs</span>(i,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span>(ans&lt;tmp)&#123;</span><br><span class="line">			ans=tmp;</span><br><span class="line">			<span class="built_in">swap</span>(pre,s);</span><br><span class="line">			k=i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(k!=<span class="number">0</span>)&#123;</span><br><span class="line">		cout&lt;&lt;k&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">		k=s[k]; </span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;endl&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="" alt="(单击上方的 &lt; 展开代码)"></p>
<h4 id="P1048-NOIP2005-普及组-采药"><a href="https://www.luogu.com.cn/problem/P1048">P1048 [NOIP2005 普及组] 采药</a></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t,m;</span><br><span class="line">	cin&gt;&gt;t&gt;&gt;m;</span><br><span class="line">	<span class="type">int</span> dp[m+<span class="number">2</span>][t+<span class="number">2</span>],v[m+<span class="number">2</span>],w[m+<span class="number">2</span>];</span><br><span class="line">	<span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line">	<span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="built_in">sizeof</span>(v));</span><br><span class="line">	<span class="built_in">memset</span>(w,<span class="number">0</span>,<span class="built_in">sTODOizeof</span>(w));</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		cin&gt;&gt;w[i]&gt;&gt;v[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=t;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">			<span class="keyword">if</span>(j&gt;=w[i])&#123;</span><br><span class="line">				dp[i][j]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][j-w[i]]+v[i],dp[i<span class="number">-1</span>][j]);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;dp[m][t]&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="" alt="(单击上方的 &lt; 展开代码)"></p>
<h4 id="P1616-疯狂的采药"><a href="https://www.luogu.com.cn/problem/P1616">P1616 疯狂的采药</a></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ll t=<span class="number">0</span>,m=<span class="number">0</span>;</span><br><span class="line">	cin&gt;&gt;t&gt;&gt;m;</span><br><span class="line">	ll dp[t+<span class="number">2</span>],w[m+<span class="number">2</span>],v[m+<span class="number">2</span>];</span><br><span class="line">	<span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line">	<span class="built_in">memset</span>(w,<span class="number">0</span>,<span class="built_in">sizeof</span>(w));</span><br><span class="line">	<span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="built_in">sizeof</span>(v));</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		cin&gt;&gt;w[i]&gt;&gt;v[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=w[i];j&lt;=t;j++)&#123;</span><br><span class="line">			dp[j]=<span class="built_in">max</span>(dp[j],dp[j-w[i]]+v[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;dp[t];</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="" alt="(单击上方的 &lt; 展开代码)"></p>
<h4 id="P1802-5-倍经验日"><a href="https://www.luogu.com.cn/problem/P1802">P1802 5 倍经验日</a></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN=<span class="number">1002</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll dp[MAXN]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> n=<span class="number">0</span>,x=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> lose=<span class="number">0</span>,win=<span class="number">0</span>,use=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;test/P1802_10.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	cin&gt;&gt;n&gt;&gt;x;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;lose&gt;&gt;win&gt;&gt;use;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=x;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">			<span class="keyword">if</span>(j&gt;=use)&#123;</span><br><span class="line">				dp[j]=<span class="built_in">max</span>(dp[j]+lose,dp[j-use]+win);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				dp[j]+=lose;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	cout&lt;&lt;(ll)(<span class="number">5</span>*dp[x])&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="" alt="(单击上方的 &lt; 展开代码)"></p>
<h4 id="P1002-NOIP2002-普及组-过河卒"><a href="https://www.luogu.com.cn/problem/P1002">P1002 [NOIP2002 普及组] 过河卒</a></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dx[<span class="number">10</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dy[<span class="number">10</span>]=&#123;<span class="number">0</span>,<span class="number">-2</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-2</span>&#125;;</span><br><span class="line"><span class="type">int</span> bx,by,mx,my;</span><br><span class="line">ll map[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="type">bool</span> edge[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;bx&gt;&gt;by&gt;&gt;mx&gt;&gt;my;</span><br><span class="line">	bx+=<span class="number">2</span>;</span><br><span class="line">	by+=<span class="number">2</span>;</span><br><span class="line">	mx+=<span class="number">2</span>;</span><br><span class="line">	my+=<span class="number">2</span>;</span><br><span class="line">	map[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">		edge[mx+dx[i]][my+dy[i]]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=bx;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">2</span>;j&lt;=by;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(edge[i][j]) <span class="keyword">continue</span>;</span><br><span class="line">			map[i][j]=map[i<span class="number">-1</span>][j]+map[i][j<span class="number">-1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=bx;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=by;j++)&#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">			cout&lt;&lt;map[i][j];</span></span><br><span class="line"><span class="comment">			if(edge[i][j])&#123;</span></span><br><span class="line"><span class="comment">				cout&lt;&lt;&quot;(&quot;&lt;&lt;edge[i][j]&lt;&lt;&quot;)&quot;;</span></span><br><span class="line"><span class="comment">			&#125;else if(i==bx&amp;&amp;j==by)&#123;</span></span><br><span class="line"><span class="comment">				cout&lt;&lt;&quot;(0)&quot;;</span></span><br><span class="line"><span class="comment">			&#125;else&#123;</span></span><br><span class="line"><span class="comment">				cout&lt;&lt;&quot;   &quot;;</span></span><br><span class="line"><span class="comment">			&#125;</span></span><br><span class="line"><span class="comment">			cout&lt;&lt;&quot; &quot;;</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;map[bx][by]&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="" alt="(单击上方的 &lt; 展开代码)"></p>
<h3 id="洛谷题单-线性状态动态规划"><a href="https://www.luogu.com.cn/training/212">洛谷题单 线性状态动态规划</a></h3>
<h4 id="P1020-NOIP1999-普及组-导弹拦截"><a href="https://www.luogu.com.cn/problem/P1020">P1020 [NOIP1999 普及组] 导弹拦截</a></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">500010</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> top=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;a[top++]);</span><br><span class="line">	<span class="type">int</span> dp[top+<span class="number">2</span>];</span><br><span class="line">	<span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line">	top-=<span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">	dp[<span class="number">1</span>]=a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=top;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[cnt]&gt;=a[i])&#123;</span><br><span class="line">        	dp[++cnt]=a[i];</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;<span class="number">1</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[j]&lt;a[i])&#123;</span><br><span class="line">                    dp[j]=a[i];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">		&#125;</span><br><span class="line">    &#125;</span><br><span class="line">	cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">	cnt=<span class="number">1</span>;</span><br><span class="line">	dp[<span class="number">1</span>]=a[<span class="number">1</span>]; </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=top;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[cnt]&lt;a[i])&#123;</span><br><span class="line">        	dp[++cnt]=a[i];</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;<span class="number">1</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[j]&gt;=a[i])&#123;</span><br><span class="line">                    dp[j]=a[i];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">		&#125; </span><br><span class="line">    &#125;</span><br><span class="line">	cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="" alt="(单击上方的 &lt; 展开代码)"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>动态规划</tag>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年8月学习记录 - 队列、栈及其应用</title>
    <url>/posts/8956865/</url>
    <content><![CDATA[<blockquote>
<p>其实以前学过了，但是感觉不熟悉，考前再系统学习一遍。</p>
<p>建议搭配 <a href="/posts/c728e72e/">2022年8月学习记录 - STL</a> 一起使用。</p>
</blockquote>
<h2 id="我的学习资料">我的学习资料</h2>
<blockquote>
<p>NOI官网：<a href="https://www.noi.cn/pxsp/2020-08-04/717304.shtml">队列、栈及其应用</a></p>
</blockquote>
<h2 id="队列">队列</h2>
<h3 id="队列的概念及基本术语">队列的概念及基本术语</h3>
<p>队头、队尾、入队、出队：与栈一样，队列(Queue)也是一种运算受限的特殊线性表。但它与栈“在同一端（栈顶）进进出出”不同，队列是从表的一端（队尾rear)入队，从表的另一端（队头front)出队。</p>
<p>栈让元素“先进后出”，而队列则让元素“先进先出”。假设有队列Q(al,a2,a3,…,an),则队列Q中的元素是按al,a2,a3,an的顺序依次入队，也只能按照al,a2,a3,…,an的顺序依次出队。因此，队列也被称作先进先出线性表(FIFO-First In First Out)。</p>
<p>在入队、出队的过程中，队列呈现如下几种状态：</p>
<ul>
<li>队空：队列中没有任何元素：</li>
<li>队满：队列空间已全被占用；</li>
<li>溢出：当队列己满，却还有元素要入队，就出现“上溢overflow”;</li>
<li>
<pre><code>  当队列己空，却还要做“出队”操作，就出现“下溢underflow”。
</code></pre>
</li>
<li>
<pre><code>  两种情况合在一起，统称为队列的“溢出”，也是“真溢出”。
</code></pre>
</li>
</ul>
<p>同栈的顺序存储结构一样，队列也可以用数组表示，并设置两个指针：队头指针front:和队尾指针rear。为简化操作，通常约定front指向队头元素的前一个位置，rear就指向队尾元素（也有front就指向队头元素，rear指向队尾元素的后一个位置)</p>
<h3 id="循环队列">循环队列</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//法一</span></span><br><span class="line"><span class="keyword">if</span>(rear+<span class="number">1</span>==M) rear=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//法二</span></span><br><span class="line"><span class="comment">//入队</span></span><br><span class="line">q[rear]=x;</span><br><span class="line">rear=(rear+<span class="number">1</span>)%M;</span><br><span class="line"><span class="comment">//出队</span></span><br><span class="line">x=q[front];</span><br><span class="line">front=(front+<span class="number">1</span>)%M;</span><br></pre></td></tr></table></figure>
<h2 id="栈">栈</h2>
<p>栈(stack)是限定仅在表尾进行插入或删除操作的线性表。因此，对栈来说，表尾端有其特殊含义，称为栈顶(op),相应地，表头端称为栈底(bottom)。</p>
<ul>
<li>不含元素的空表称为空栈。</li>
</ul>
<p>栈的特征：</p>
<ul>
<li>
<p>栈中数据元素的进出</p>
</li>
<li>
<p>顺序是后进先出。(LIFO,Last In First Out)</p>
<p>(栈顶先出)</p>
</li>
</ul>
<p>栈的存储：</p>
<ul>
<li>顺序栈 -&gt;  使用数组存储</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用一维数组s作为栈的存储结构</span></span><br><span class="line"><span class="comment">// n是栈的最大容量，即栈中最多可存放的元素；</span></span><br><span class="line"><span class="comment">// top是栈顶指针，s[top]是栈顶元素；</span></span><br><span class="line">datatype s[n]; <span class="comment">// s[n+1]</span></span><br><span class="line"><span class="type">int</span> top;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断栈是否为空</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">sempty</span><span class="params">(<span class="type">int</span> top)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> top==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断栈满的函数</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">sfull</span><span class="params">(<span class="type">int</span> top)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> top==n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化栈(init)</span></span><br><span class="line">top=<span class="number">0</span>;</span><br><span class="line"><span class="comment">// 进栈(压栈,push)</span></span><br><span class="line"><span class="keyword">for</span>(!<span class="built_in">sfull</span>(top))&#123;</span><br><span class="line">    top++;</span><br><span class="line">	s[top]=x;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;			<span class="comment">//上溢</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;overflow&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 出栈(退栈,pop)</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">sempty</span>(top))&#123;</span><br><span class="line">    x=s[top];</span><br><span class="line">	top--;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;			<span class="comment">//下溢</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;underfloe&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查看栈顶元素</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">sempty</span>(top))&#123;</span><br><span class="line">    x=s[top];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;			<span class="comment">//下溢</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;underfloe&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>链式栈</li>
</ul>
<h2 id="洛谷题单-队列、栈及其应用"><a href="https://www.luogu.com.cn/training/211872">洛谷题单 队列、栈及其应用</a></h2>
<h3 id="U268237-周末舞会"><a href="https://www.luogu.com.cn/problem/U268237">U268237 周末舞会</a></h3>
<ul>
<li>法一：循环队列</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> m=<span class="number">0</span>,n=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">	cin&gt;&gt;m&gt;&gt;n&gt;&gt;k; </span><br><span class="line">	<span class="type">int</span> a[m+<span class="number">2</span>],b[n+<span class="number">2</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++) a[i]=i;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) b[i]=i;</span><br><span class="line">	<span class="type">int</span> f1=<span class="number">1</span>,r1=m,f2=<span class="number">1</span>,r2=n;</span><br><span class="line">	<span class="keyword">while</span>(k&gt;<span class="number">0</span>)&#123;</span><br><span class="line">		cout&lt;&lt;a[f1]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;b[f2]&lt;&lt;endl;</span><br><span class="line">		r1++; a[r1]=a[f1]; f1++;</span><br><span class="line">		r2++; b[r2]=b[f2]; f2++;</span><br><span class="line">		k--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>法二：暴力枚举</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        cout&lt;&lt;(i%n+<span class="number">1</span>)&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;(i%m+<span class="number">1</span>)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="U267778-纸牌问题"><a href="https://www.luogu.com.cn/problem/U267778">U267778 纸牌问题</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10000010</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n=<span class="number">0</span>; </span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">if</span>(n&lt;<span class="number">1</span>||n&gt;<span class="number">10000000</span>)&#123;</span><br><span class="line">		cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		a[i]=i+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> front=<span class="number">0</span>,rear=n;</span><br><span class="line">	<span class="keyword">while</span>(front!=rear)&#123;</span><br><span class="line">		<span class="comment">//cout&lt;&lt;a[front]&lt;&lt;&quot; &quot;; </span></span><br><span class="line">		front=(front+<span class="number">1</span>)%(n+<span class="number">1</span>);</span><br><span class="line">		a[rear]=a[front];</span><br><span class="line">		front=(front+<span class="number">1</span>)%(n+<span class="number">1</span>);</span><br><span class="line">		rear=(rear+<span class="number">1</span>)%(n+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;a[(front<span class="number">-2</span>)%(n+<span class="number">1</span>)]&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="U267779-取牌游戏"><a href="https://www.luogu.com.cn/problem/U267779">U267779 取牌游戏</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[MAXN];</span><br><span class="line"><span class="type">int</span> result[MAXN];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">	<span class="type">int</span> K=<span class="number">0</span>, N=<span class="number">0</span>, P=<span class="number">0</span>;</span><br><span class="line">	cin &gt;&gt; N &gt;&gt; K &gt;&gt; P;</span><br><span class="line">	<span class="keyword">if</span>(P&lt;<span class="number">1</span> || P&gt;<span class="number">10</span> || N&lt;<span class="number">2</span> || N&gt;<span class="number">100</span> || K&lt;N || K&gt; <span class="number">100000</span>)&#123;</span><br><span class="line">		cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> front = <span class="number">1</span>,rear = K;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= K; i++) a[i] = i;</span><br><span class="line">	<span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= K; i++)&#123;</span><br><span class="line">		x++;</span><br><span class="line">		<span class="keyword">if</span> (x % N == <span class="number">0</span>) result[a[front]] = a[front];</span><br><span class="line">		a[front] = <span class="literal">NULL</span>;</span><br><span class="line">		front = (front + <span class="number">1</span>) % MAXN;</span><br><span class="line">		<span class="keyword">if</span> (front == rear + <span class="number">1</span>)<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= P; j++)&#123;</span><br><span class="line">			rear = (rear + <span class="number">1</span>) % MAXN;</span><br><span class="line">			a[rear] = a[front];</span><br><span class="line">			a[front] = <span class="literal">NULL</span>;</span><br><span class="line">			front = (front + <span class="number">1</span>) % MAXN;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= K; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(result[i]) cout&lt;&lt;result[i]&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="U267780-魔法师与扑克牌游戏"><a href="https://www.luogu.com.cn/problem/U267780">U267780 魔法师与扑克牌游戏</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n=<span class="number">0</span>,j=<span class="number">1</span>;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">if</span>(n&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">		cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> a[n+<span class="number">2</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="type">int</span> p=i;</span><br><span class="line">		<span class="keyword">if</span>(i&gt;n/<span class="number">2</span>&amp;&amp;i&lt;n)p=(i+<span class="number">1</span>)%(n-i+<span class="number">1</span>)<span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">if</span>(p!=<span class="number">-1</span>)<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=p;k++)&#123;</span><br><span class="line">			<span class="keyword">do</span>&#123;</span><br><span class="line">				j++;</span><br><span class="line">				<span class="keyword">if</span>(j&gt;n)j=<span class="number">1</span>;</span><br><span class="line">			&#125;<span class="keyword">while</span>(a[j]!=<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(p==<span class="number">-1</span>)&#123;</span><br><span class="line">			<span class="keyword">do</span>&#123;</span><br><span class="line">				j--;</span><br><span class="line">				<span class="keyword">if</span>(j&lt;<span class="number">1</span>)j=n;</span><br><span class="line">			&#125;<span class="keyword">while</span>(a[j]!=<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		a[j]=i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h3 id="U267781-程序输入问题"><a href="https://www.luogu.com.cn/problem/U267781">U267781 程序输入问题</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> m=<span class="number">0</span>,n=<span class="number">0</span>,top=<span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> s[<span class="number">1002</span>];</span><br><span class="line">string str=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">getline</span>(cin,str))&#123;</span><br><span class="line">		top=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;str.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">			<span class="keyword">switch</span>(str[i])&#123;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&#x27;#&#x27;</span>:&#123;</span><br><span class="line">					<span class="keyword">if</span>(top==<span class="number">0</span>)&#123;</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					top--;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&#x27;@&#x27;</span>:&#123;</span><br><span class="line">					top=<span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">default</span>:&#123;</span><br><span class="line">					top++;</span><br><span class="line">					s[top]=str[i];</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=top;i++)&#123;</span><br><span class="line">			cout&lt;&lt;s[i];</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>队列</tag>
        <tag>栈</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年8月学习记录</title>
    <url>/posts/c728e72e/</url>
    <content><![CDATA[<div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">更新记录</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022年8月学习记录</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-12-15 链接修复</p>
</div></div><div class='timeline-item-content'><ol>
<li>链接修复：文章跳转链接修复</li>
</ol>
</div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="算法">算法</h2>
<h3 id="倍增">倍增</h3>
<h4 id="快速幂">快速幂</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 计算 a^b%p</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> namesapce std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> a,b,p,ans=<span class="number">1</span>;</span><br><span class="line">	cin&gt;&gt;a&gt;&gt;b&gt;&gt;p;</span><br><span class="line">	<span class="keyword">while</span>(b)&#123;</span><br><span class="line">		<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ll)ans*a%p;</span><br><span class="line">		a=(ll)a*a%p;</span><br><span class="line">		b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;ans%p&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="快速乘">快速乘</h4>
<h4 id="矩阵快速幂">矩阵快速幂</h4>
<h4 id="RMQ问题">RMQ问题</h4>
<p>RMQ问题是一个(一组？)经典的可以用倍增来解决的问题</p>
<h5 id="ST表">ST表</h5>
<p>给定一个长度为n的序列A[1···n]，有q次询问，每次询问给出x，y，回答A[x···y]中的最大值。（也可以是最小值，此处以最大值为例）通常n,q&lt;=100000）</p>
<p>利用倍增解决RMQ问题的算法：ST（Sparse Table）算法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 生成ST表</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)st[i][<span class="number">0</span>]=A[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;j)&lt;=n;j++)</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=n;i++)</span><br><span class="line">		st[i][j]=<span class="built_in">max</span>(st[i][j<span class="number">-1</span>],st[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>]);</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 计算A[x···y]中的最大值 O(1)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> k=(<span class="type">int</span>)(<span class="built_in">log</span>(y-x+<span class="number">1</span>)/<span class="built_in">log</span>(<span class="number">2</span>));</span><br><span class="line">	<span class="type">int</span> m=<span class="built_in">max</span>(st[x][k]，st[y—(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">	<span class="keyword">return</span> m; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="树上最近公共祖先">树上最近公共祖先</h5>
<p>树上最近公共祖先，简称LCA，是关于树的一个非常基础的概念：<br>
给定一棵有根树，一个点到根节点的路径上的所有点称为该点的祖先若点u同时是点x，y的祖先，那么u称为x，y的公共祖先。的所有公共祖先中，深度最大的点称为x，y的最近公共祖先。<br>
另一种理解：x到y的路径上深度最小的点为x，y的最近公共祖先。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// O(logn)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LCA</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(d[x]&lt;d[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">16</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">		<span class="keyword">if</span>(d[f[x][i]]&gt;=d[y])</span><br><span class="line">			x=f[x][i];</span><br><span class="line">	<span class="keyword">if</span>(x==y) <span class="keyword">return</span> x;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">16</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">		<span class="keyword">if</span>(f[x][i]!=f[y][i])</span><br><span class="line">			x=f[x][i],y=f[y][i];</span><br><span class="line">	<span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="简单数论">简单数论</h3>
<h4 id="欧几里得算法">欧几里得算法</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// O(loga)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 迭代法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(b!=<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="type">int</span> t=a%b;</span><br><span class="line">		a=b;</span><br><span class="line">		b=t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="拓展欧几里得">拓展欧几里得</h5>
<p>对于给定的两个整数a和b，必存在整数x和y，使得 a<em>x+b</em>y=gcd(a,b)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 计算 a*x+b*y=gcd(a,b) 的特解</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Extended_Gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> &amp;d,<span class="type">int</span> &amp;x,<span class="type">int</span> &amp;y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="number">0</span>==b)&#123;</span><br><span class="line">		d=a;</span><br><span class="line">		x=c/a;</span><br><span class="line">		y=<span class="number">0</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="type">int</span> x1,y1;</span><br><span class="line">		<span class="built_in">Extened_God</span>(b,a,d,x1,x2);</span><br><span class="line">		x=y1;</span><br><span class="line">		y=x1-a/b*y1;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="裴蜀定理">裴蜀定理</h5>
<p>方程 a<em>x+b</em>y=c 有整数解的充分必要条件是 c 是 gcd(a,c) 的倍数</p>
<h4 id="素数">素数</h4>
<p>输入N（N&lt;=5*10^7）,输出1到N之间的所有素数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// O(nlnlnn)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sieve</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(isPrime,<span class="literal">true</span>,<span class="built_in">sizeof</span>(isPrime));			<span class="comment">//#include&lt;string.h&gt;</span></span><br><span class="line">	<span class="keyword">for</span>&#123;<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;n;i++&#125;&#123;</span><br><span class="line">		<span class="keyword">if</span>(isPrime[i])&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=i*i;i&lt;=n;i+=i)&#123;</span><br><span class="line">				isPrime[j]=<span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="欧拉筛">欧拉筛</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// O(n)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Euler_sieve</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(isPrime,<span class="literal">true</span>,<span class="built_in">sizeof</span>(isPrime));			<span class="comment">//#include&lt;string.h&gt;</span></span><br><span class="line">	<span class="keyword">for</span>&#123;<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++&#125;&#123;</span><br><span class="line">		<span class="keyword">if</span>(isPrime[i]) prime[++prime[<span class="number">0</span>]]=i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span>	j=<span class="number">1</span>;i&lt;=prime[<span class="number">0</span>] &amp;&amp; i*prime[j]&lt;=n;j++)&#123;</span><br><span class="line">			isPrime[i*prime[<span class="number">0</span>]]=<span class="literal">false</span>;</span><br><span class="line">			<span class="keyword">if</span>(<span class="number">0</span>==i%prinme[j]) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="动态规划">动态规划</h3>
<blockquote>
<p><a href="/posts/86fa511b/">2022年8月学习记录 - 动态规划专练</a></p>
</blockquote>
<h2 id="解题公式">解题公式</h2>
<h3 id="巧用位移解题">巧用位移解题</h3>
<ul>
<li>2的n次幂 ===&gt; (1&lt;&lt;n）</li>
<li>n/2 ===&gt; (n&gt;&gt;1)</li>
</ul>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年9月学习记录 - 时间复杂度题目训练</title>
    <url>/posts/bfc79706/</url>
    <content><![CDATA[<blockquote>
<p>早在今年四月份的时候我就已经学习过时间复杂度了,但当时只是了解了以下，知道了这是什么东西，现在在做题时发现其实根本不会做题，所以现在来还债了。</p>
</blockquote>
<h2 id="我的学习资料">我的学习资料</h2>
<blockquote>
<p>CSDN：<a href="https://blog.csdn.net/K_Xin/article/details/108914891">王道数据结构选择题汇总</a></p>
<p>BiliBili：<a href="https://www.bilibili.com/video/BV1HT411A766">时间复杂度之2023王道课后题</a> (注：你完全可以在了解定义后看这个视频来学习时间复杂度)</p>
<p>(B站上找了一圈，发现这个视频时讲得最好的，除了声音有点小外没有其他缺点)</p>
</blockquote>
<h2 id="规则">规则</h2>
<p>加法规则：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>T</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=T_{1}(n)+T_{2}(n)=O(f(n))+O(g(n))=O(max( f(n),g(n) ) )
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)))</span></span></span></span></span></p>
<p>乘法规则：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>×</mo><msub><mi>T</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>×</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>×</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=T_{1}(n)×T_{2}(n)=O(f(n))×O(g(n))=O(f(n)×g(n))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></span></p>
<h2 id="常用级数">常用级数</h2>
<p>收敛级数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><msup><mn>2</mn><mn>2</mn></msup></mfrac><mo>+</mo><mfrac><mn>1</mn><msup><mn>3</mn><mn>2</mn></msup></mfrac><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mfrac><mn>1</mn><msup><mi>n</mi><mn>2</mn></msup></mfrac><mo>&lt;</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><msup><mn>2</mn><mn>2</mn></msup></mfrac><mo>+</mo><mfrac><mn>1</mn><msup><mn>3</mn><mn>2</mn></msup></mfrac><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>=</mo><mfrac><msup><mi>π</mi><mn>2</mn></msup><mn>6</mn></mfrac><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = 1+\frac{1}{2^2}+\frac{1}{3^2}+...+\frac{1}{n^2} &lt; 1 +\frac{1}{2^2}+\frac{1}{3^2}+... = \frac{π^2}{6} = O(1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p>调和级数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = 1+\frac{1}{2}+\frac{1}{3}+...+\frac{1}{n} = O(logn)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>对数级数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mn>1</mn><mo>+</mo><mi>l</mi><mi>o</mi><mi>g</mi><mn>2</mn><mo>+</mo><mi>l</mi><mi>o</mi><mi>g</mi><mn>3</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = log1 + log2 + log3 +...+logn = O(nlogn)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>算术级数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mi>n</mi><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = 1 + 2 + ... + n = \frac{n(n+1)}{2} = O(n^2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>幂方级数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msup><mi>k</mi><mn>2</mn></msup><mo>≈</mo><msubsup><mo>∫</mo><mn>0</mn><mi>n</mi></msubsup><msup><mi>x</mi><mn>2</mn></msup><mi>d</mi><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><msup><mi>n</mi><mn>3</mn></msup><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = 1^2+2^2+3^2+...+n^2 = \sum_{k=0}^{n}k^2≈\int_{0}^{n}x^{2}dx=\frac{1}{3}n^{3}=O(n^{3})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9535em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3262em;vertical-align:-0.9119em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>几何级数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>8</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msup><mn>2</mn><mi>n</mi></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msup><mn>2</mn><mi>k</mi></msup><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_{2}(n) = 1+ 2 + 4+ 8+...+2^n =\sum_{k=0}^{n}2^k = 2^{n+1}-1 =O(2^{n+1})=O(2^n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7144em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9535em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="迭代程序">迭代程序</h2>
<p>迭代程序通常使用 <code>while</code> 循环或 <code>for</code> 循环表示，两者可以等价互换，而 <code>for</code> 循环便于计算时间复杂度，所以遇到 <code>while</code> 循环时统一转换为 <code>for</code> 循环以计算。</p>
<h2 id="递归程序">递归程序</h2>
<blockquote>
<p><strong>递归方程：</strong> 递归关系简单的方程，可借助递推关系归纳出 T(n)与T(n – 1)等的关系，不断用递推方程的右部替换左部，直至 T(1)</p>
</blockquote>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>时间复杂度</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年学习记录 - 二叉树的性质和储存结构</title>
    <url>/posts/sdb8uh4b/</url>
    <content><![CDATA[<h2 id="声明">声明</h2>
<blockquote>
<p>本节内容来源于 BiliBili视频<a href="https://www.bilibili.com/video/BV1nJ411V7bd">数据结构与算法基础（青岛大学-王卓）</a> 的 P81 - P85，本博客仅作笔记整理和学习记录，部分图片来自视频截图。</p>
</blockquote>
<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-gGYByNVJRPGlPwFa" src="https://player.bilibili.com/player.html?bvid=BV1nJ411V7bd&page=81&high_quality=1&danmaku=true&autoplay=0" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-gGYByNVJRPGlPwFa").style.height=document.getElementById("mmedia-gGYByNVJRPGlPwFa").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-gGYByNVJRPGlPwFa").style.height=document.getElementById("mmedia-gGYByNVJRPGlPwFa").scrollWidth*0.76+"px";
    }; </script>
<h2 id="二叉树的性质">二叉树的性质</h2>
<ol>
<li>在二叉树的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层上至多有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8247em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>≥</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i \geq 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。（证明：<a href="https://www.bilibili.com/video/BV1nJ411V7bd/?p=81&amp;share_source=copy_web&amp;vd_source=af489a7bf5a65f9820f5ae199365145d&amp;t=95">归纳法</a>）</li>
<li>深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的二叉树至多有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>≥</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(k \geq 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。（证明：<a href="https://www.bilibili.com/video/BV1nJ411V7bd/?p=81&amp;share_source=copy_web&amp;vd_source=af489a7bf5a65f9820f5ae199365145d&amp;t=416">性质1求和</a>）</li>
<li>对任何一棵二叉树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，如果其叶子数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 的结点数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">n_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><msub><mi>n</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_0=n_2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。（证明：<a href="https://www.bilibili.com/video/BV1nJ411V7bd/?p=81&amp;share_source=copy_web&amp;vd_source=af489a7bf5a65f9820f5ae199365145d&amp;t=677">边数证明</a>）</li>
<li>具有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个结点的完全二叉树的深度为<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor log_2(n) \rfloor + 1 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p>
（证明：<a href="https://www.bilibili.com/video/BV1nJ411V7bd/?p=83&amp;share_source=copy_web&amp;vd_source=af489a7bf5a65f9820f5ae199365145d&amp;t=172">n与k的关系</a>）</li>
<li>如果对一棵有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个结点的完全二叉树的结点按层编号（从第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 层到第最后一层，每层从左到右），则对任一结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i(1 \leq i \leq n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7955em;vertical-align:-0.136em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> ：
<ul>
<li>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，则结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 是二叉树的根，无双亲；如果 $i &gt; 1 $ ，则其双亲是结点：</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">⌊</mo><mi>i</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor i / 2 \rfloor
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">i</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span></span></p>
<ul>
<li>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mo>&gt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">2i&gt;n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>，则结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 为叶子节点，无左孩子；否则其左孩子是结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi></mrow><annotation encoding="application/x-tex">2i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span></span></span></span>。</li>
<li>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn><mo>&gt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">2i+1&gt;n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>，则结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 无右孩子；否则，其右孩子是结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。<br>
（证明思路：<a href="https://www.bilibili.com/video/BV1nJ411V7bd/?p=83&amp;share_source=copy_web&amp;vd_source=af489a7bf5a65f9820f5ae199365145d&amp;t=444">归纳法</a>）</li>
</ul>
</li>
</ol>
<h3 id="满二叉树">满二叉树</h3>
<p>定义：一颗深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 且有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个结点的二叉树称为满二叉树。</p>
<p>特点：</p>
<ol>
<li>每一层上的结点数都是最大结点数（即每层都满）。</li>
<li>叶子结点全部在最底层。</li>
<li>满二叉树在同样深度的二叉树中结点、叶子节点个数最多。</li>
</ol>
<p>编号规则：自上而下，自左而右。</p>
<h3 id="完全二叉树">完全二叉树</h3>
<p>深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的具有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个结点的二叉树，当且仅当其中每一个结点都与深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的满二叉树中编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">1~n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace nobreak"> </span><span class="mord mathnormal">n</span></span></span></span> 的结点一一对应时，称之为完全二叉树。</p>
<p><img src="/assets/image/posts/sdb8uh4b/%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%92%8C%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91.png" alt="满二叉树和完全二叉树"></p>
<p>在满二叉树中，从最后一个结点开始，连续去掉任意个结点，即是一颗完全二叉树。</p>
<p>特点：</p>
<ol>
<li>叶子只可能扽不在层次最大的两层上。</li>
<li>对任一结点。如果其右子树的最大层次为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>，则其左子树的最大层次必为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</li>
</ol>
<h2 id="二叉树的存储结构">二叉树的存储结构</h2>
<h3 id="二叉树的顺序存储存储">二叉树的顺序存储存储</h3>
<p>实现：按满二叉树的结点层次编号，依次存放二叉树中的数据元素。</p>
<p><img src="/assets/image/posts/sdb8uh4b/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="二叉树的顺序存储示意图"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 二叉树顺序存储表示</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXTSIZE 100</span></span><br><span class="line">Typedef TElemType SqBiTree[MAXTSIZE]</span><br><span class="line">SqBiTree bt;</span><br></pre></td></tr></table></figure>
<p><img src="/assets/image/posts/sdb8uh4b/%E4%B8%80%E8%88%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AD%98%E5%82%A8.png" alt="一般二叉树的存储"></p>
<p>二叉树的顺序存储缺点：<br>
最坏情况：深度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的且只有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个结点的单支树需要长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的一维数组。</p>
<p>特点：</p>
<ul>
<li>结点间关系蕴含在其存储位置中。</li>
<li>浪费空间，适于存满二叉树和完全二叉树。</li>
</ul>
<h3 id="二叉树的链式存储">二叉树的链式存储</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 二叉树的链式存储定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BiNode</span>&#123;</span><br><span class="line">  TElemType data;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">BiNode</span> *lchild, *rchild;</span><br><span class="line">&#125;BiNode, *BiTree;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个结点的二叉链表中，必有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>n</mi></mrow><annotation encoding="application/x-tex">2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span></span></span></span> 个链域，会有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个结点的链域存放指针，会有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个空指针域。</p>
</blockquote>
<p>Tip：空指针域可以在线索二叉树中被利用。</p>
<h3 id="三叉链表">三叉链表</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 三叉链表定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">TriTNode</span>&#123;</span><br><span class="line">  TElemType data;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">TriTNode</span> *lchild, *parent, *rchild;</span><br><span class="line">&#125;TriTNode, *TriTree;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构与算法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>二叉树</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年学习记录 - 二叉树遍历算法分析及运用</title>
    <url>/posts/hu7yg98s/</url>
    <content><![CDATA[<h2 id="声明">声明</h2>
<blockquote>
<p>本节内容来源于 BiliBili视频<a href="https://www.bilibili.com/video/BV1nJ411V7bd">数据结构与算法基础（青岛大学-王卓）</a> 的 P89 - P93，本博客仅作笔记整理和学习记录，部分图片来自视频截图。</p>
</blockquote>
<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-wyEBeHpPuEGOAjJE" src="https://player.bilibili.com/player.html?bvid=BV1nJ411V7bd&page=89&high_quality=1&danmaku=true&autoplay=0" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-wyEBeHpPuEGOAjJE").style.height=document.getElementById("mmedia-wyEBeHpPuEGOAjJE").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-wyEBeHpPuEGOAjJE").style.height=document.getElementById("mmedia-wyEBeHpPuEGOAjJE").scrollWidth*0.76+"px";
    }; </script>
<h2 id="二叉树递归算法">二叉树递归算法</h2>
<h3 id="先序遍历递归算法">先序遍历递归算法</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">PreOrderTraverse</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> OK;  <span class="comment">//空二叉树</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">visit</span>(T); <span class="comment">//访问根节点</span></span><br><span class="line">    <span class="built_in">PreOrderTraverse</span>(T-&gt;lchild);  <span class="comment">//递归遍历左子树</span></span><br><span class="line">    <span class="built_in">PreOrderTraverse</span>(T-&gt;rchild);  <span class="comment">//递归遍历右子树</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实现</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Pre</span><span class="params">(BiTree *T)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, T-&gt;data);</span><br><span class="line">    <span class="built_in">pre</span>(T-&gt;lchild);</span><br><span class="line">    <span class="built_in">pre</span>(T-&gt;rchild);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="中序遍历递归算法">中序遍历递归算法</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">InOrderTraverse</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> OK;  <span class="comment">//空二叉树</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T-&gt;lchild);  <span class="comment">//递归遍历左子树</span></span><br><span class="line">    <span class="built_in">visit</span>(T); <span class="comment">//访问根节点</span></span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T-&gt;rchild);  <span class="comment">//递归遍历右子树</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="后序遍历递归算法">后序遍历递归算法</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">PostOrderTraverse</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> OK;  <span class="comment">//空二叉树</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">PostOrderTraverse</span>(T-&gt;lchild);  <span class="comment">//递归遍历左子树</span></span><br><span class="line">    <span class="built_in">PostOrderTraverse</span>(T-&gt;rchild);  <span class="comment">//递归遍历右子树</span></span><br><span class="line">    <span class="built_in">visit</span>(T); <span class="comment">//访问根节点</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="遍历算法的分析">遍历算法的分析</h3>
<p><img src="/assets/image/posts/snd9tnx8/%E9%81%8D%E5%8E%86%E7%AE%97%E6%B3%95%E7%9A%84%E5%88%86%E6%9E%90.png" alt="遍历算法的分析"></p>
<p>时间效率: O(n)<br>
空间效率: O(n)</p>
<h2 id="二叉树非递归算法">二叉树非递归算法</h2>
<h3 id="中序遍历非递归算法">中序遍历非递归算法</h3>
<p>二叉树中序遍历的非递归算法的关键：在中序遍历过某结点的整个左子树后，如何找到该结点的根以及右子树。</p>
<p>基本思想:</p>
<ol>
<li>建立一个栈</li>
<li>根结点进栈，遍历左子树</li>
<li>根结点出栈，输出根结点，遍历右子树。</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">InOrderTraverse</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">  BiTree p;</span><br><span class="line">  <span class="built_in">InitStack</span>(S);</span><br><span class="line">  p=T;</span><br><span class="line">  <span class="keyword">while</span>(p || !<span class="built_in">StackEmpty</span>(S))&#123;</span><br><span class="line">    <span class="keyword">if</span>(p) &#123;</span><br><span class="line">      <span class="built_in">Push</span>(S,p);</span><br><span class="line">      p = p -&gt; lchild;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">Pop</span>(S,q);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, q-&gt;data);</span><br><span class="line">      p = q -&gt; rchild;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="comment">//while</span></span><br><span class="line">  <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二叉树层次遍历算法">二叉树层次遍历算法</h2>
<p>算法设计思路:</p>
<p>使用一个队列:</p>
<ol>
<li>将根结点进队；</li>
<li>队不空时循环：从队列中出列一个结点*p，访问它：
<ol>
<li>若它有左孩子结点，将左孩子结点进队；</li>
<li>若它有右孩子结点，将右孩子结点进队。</li>
</ol>
</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">  BTNode data[MaxSize];</span><br><span class="line">  <span class="type">int</span> front, rear;</span><br><span class="line">&#125;SqQueue;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">LecelOrder</span><span class="params">(BTNode *b)</span></span>&#123;</span><br><span class="line">  BTNode *p;</span><br><span class="line">  SqQueue *qu;</span><br><span class="line">  <span class="built_in">InitQueue</span>(qu);              <span class="comment">//初始化队列</span></span><br><span class="line">  <span class="built_in">enQueue</span>(qu, b);             <span class="comment">//根节点指针进入队列</span></span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">QueueEmpty</span>(qu))&#123;     <span class="comment">//队列不为空，则循环</span></span><br><span class="line">    <span class="built_in">deQueue</span>(qu, p);           <span class="comment">//出队结点p</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, p -&gt; data);  <span class="comment">//访问结点p</span></span><br><span class="line">    <span class="keyword">if</span>(p-&gt;lchild!=<span class="literal">NULL</span>) <span class="built_in">enQueue</span>(qu, p-&gt;lchild);</span><br><span class="line">    <span class="keyword">if</span>(p-&gt;rchild!=<span class="literal">NULL</span>) <span class="built_in">enQueue</span>(qu, p-&gt;rchild);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二叉树遍历算法的应用（以先序遍历为例）">二叉树遍历算法的应用（以先序遍历为例）</h2>
<h3 id="建立二叉树的二叉链表">建立二叉树的二叉链表</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">CreateBiTree</span><span class="params">(BiTree&amp;T)</span></span>&#123; </span><br><span class="line">  <span class="built_in">scanf</span>(&amp;ch);   <span class="comment">//cin&gt;&gt;ch;</span></span><br><span class="line">  <span class="keyword">if</span>(ch== <span class="string">&quot;#&quot;</span>) T=<span class="literal">NULL</span>; </span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!(T = (BiTNode *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode)))) <span class="built_in">exit</span>(OVERFLOW);    <span class="comment">//T=new BiTNode; </span></span><br><span class="line">    T-&gt;data = ch；              <span class="comment">//生成根结点</span></span><br><span class="line">    <span class="built_in">CreateBiTree</span>(T-&gt;lchild);    <span class="comment">//构造左子树 </span></span><br><span class="line">    <span class="built_in">CreateBiTree</span>(T-&gt;rchild);    <span class="comment">//构造右子树</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> OK;</span><br><span class="line">&#125;<span class="comment">//CreateBiTree </span></span><br></pre></td></tr></table></figure>
<h3 id="复制二叉树">复制二叉树</h3>
<p>算法思想：如果是空树，递归结束；否则，申请新结点空间，复制根结点递归复制左子树、递归复制右子树</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Copy</span><span class="params">(BiTree T, BiTree &amp;NewT)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>)&#123; <span class="comment">//如果是空树返回0</span></span><br><span class="line">    NewT = <span class="literal">NULL</span>; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    NewT = <span class="keyword">new</span> BiTNode;</span><br><span class="line">    NewT-&gt;data = T-&gt;data; </span><br><span class="line">    <span class="built_in">Copy</span>(T-&gt;IChild, NewT-&gt;Ichild);</span><br><span class="line">    <span class="built_in">Copy</span>(T-&gt;rChild, NewT-&gt;rchild); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="计算二叉树的深度">计算二叉树的深度</h3>
<p>算法思想：如果是空树，则深度为0；否则，递归计算左子树的深度记为m，递归计算右子树的深度记为n，二叉树的深度则为m与n的较大者加1。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Depth</span><span class="params">(BiTree T)</span></span>&#123; </span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//如果是空树返回0</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    m = <span class="built_in">Depth</span>(T-&gt;IChild); </span><br><span class="line">    n = <span class="built_in">Depth</span>(T-&gt;rChild); </span><br><span class="line">    <span class="keyword">if</span>(m&gt;n) <span class="keyword">return</span> (m+<span class="number">1</span>); </span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">return</span>(n+<span class="number">1</span>); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="计算二叉树的结点总数">计算二叉树的结点总数</h3>
<p>算法思想：如果是空树，则节点个数为0；否则，节点个数为左子树的结点个数+右子树的结点个数再+1。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">NodeCount</span><span class="params">(BiTree T)</span></span>&#123; </span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//如果是空树返回0</span></span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">return</span> (<span class="built_in">NodeCount</span>(T-&gt;lchild) + <span class="built_in">NodeCount</span>(T-&gt;rchild) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="计算二叉树的叶子节点总数">计算二叉树的叶子节点总数</h3>
<p>算法思想：如果是空树，则叶子节点个数为0；否则，节点个数为左子树的叶子结点个数+右子树的叶子结点个数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">LeadCount</span><span class="params">(BiTree T)</span></span>&#123; </span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//如果是空树返回0</span></span><br><span class="line">  <span class="keyword">if</span>(T-&gt;lchild == <span class="literal">NULL</span> &amp;&amp; T-&gt;rchild == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">return</span> (<span class="built_in">LeadCount</span>(T-&gt;lchild) + <span class="built_in">LeadCount</span>(T-&gt;rchild));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构与算法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>二叉树</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年学习记录 - 哈夫曼树及其运用</title>
    <url>/posts/nis73hu8/</url>
    <content><![CDATA[<h2 id="声明">声明</h2>
<blockquote>
<p>本节内容来源于 BiliBili视频<a href="https://www.bilibili.com/video/BV1nJ411V7bd">数据结构与算法基础（青岛大学-王卓）</a> 的 P101 - P107，本博客仅作笔记整理和学习记录，部分图片来自视频截图。</p>
</blockquote>
<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-CLhPahsMISDbACRB" src="https://player.bilibili.com/player.html?bvid=BV1nJ411V7bd&page=101&high_quality=1&danmaku=true&autoplay=0" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-CLhPahsMISDbACRB").style.height=document.getElementById("mmedia-CLhPahsMISDbACRB").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-CLhPahsMISDbACRB").style.height=document.getElementById("mmedia-CLhPahsMISDbACRB").scrollWidth*0.76+"px";
    }; </script>
<h2 id="哈夫曼树的基本概念">哈夫曼树的基本概念</h2>
<ul>
<li>路径：从树中一个结点到另一个结点之间的分支构成这两个结点间的路径。</li>
<li>结点的路径长度：两结点间路径上的分支数。</li>
<li>树的路径长度：从树根到每一个结点的路径长度之和。记作：TL</li>
<li>权（weight）：将树中结点赋给一个有着某种含义的数值，则这个数值称为该结点的权。</li>
<li>结点的带权路径长度：从根结点到该结点之间的路径长度与该结点的权的乘积。</li>
<li>树的带权路径长度：树中所有叶子结点的带权路径长度之和。记作：（其中w是权值，k是结点到根的路径长度）<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>w</mi><mi>k</mi></msub><msub><mi>l</mi><mi>k</mi></msub></mrow></mrow><annotation encoding="application/x-tex">\sum_{k=1}^{n}{w_kl_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<h2 id="哈夫曼树的性质">哈夫曼树的性质</h2>
<p>结点数目相同的二叉树中，完全二叉树是路径长度最短的二叉树。</p>
<ul>
<li>
<p>哈夫曼树：最优树<br>
带权路径长度（WPL）最短的树<br>
“带权路径长度最短”是在“度相同”的树中比较而得的结果，因此有最优二叉树、最优三叉树之称等等。</p>
</li>
<li>
<p>哈夫曼树：最优二叉树<br>
带权路径长度（WPL）最短的二叉树</p>
</li>
</ul>
<p>因为构造这种树的算法是由哈夫曼教授于1952年提出的，所以被称为哈夫曼树，相应的算法称为哈夫曼算法。</p>
<blockquote>
<p>满二叉树不一定是哈夫曼树<br>
哈夫曼树中权越大的叶子离根越近<br>
具有相同带权结点的哈夫曼树不惟一</p>
</blockquote>
<h2 id="哈夫曼算法">哈夫曼算法</h2>
<p>即：构造哈夫曼树的方法</p>
<ol>
<li>根据n个给定的权值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>W</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext>．．．</mtext><mo separator="true">,</mo><msub><mi>W</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{W_1, W_2,．．．,W_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">．．．</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 构成n棵二叉树的森林<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mtext>＝</mtext><mrow><msub><mi>T</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>T</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext>．．．</mtext><mo separator="true">,</mo><msub><mi>T</mi><mi>n</mi></msub></mrow></mrow><annotation encoding="application/x-tex">F＝{T_1,T_2,．．．,T_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord cjk_fallback">＝</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">．．．</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>，其中T；只有一个带权为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>的根结点。</li>
<li>在F中选取两棵根结点的权值最少的树作为左右子树，构造一棵新的二叉树，且设置新的二叉树的根结点的权值为其左右子树上根结点的权值之和。</li>
<li>在F中删除这两棵树，同时将新得到的二叉树加入森林中。</li>
<li>重复（2）和（3），直到森林中只有一棵树为止，这棵树即为哈夫曼树。</li>
</ol>
<p>口诀：</p>
<blockquote>
<p>构造森林全是根<br>
选用两小造新树<br>
删除两小添新人<br>
重复二三剩单根</p>
</blockquote>
<ul>
<li>包含n个叶子结点的哈夫曼树中共有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个结点。</li>
<li>哈夫曼树的结点的度数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>，没有度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的结点。<br>
因为：包含n棵树的森林要经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span>次合并才能形成哈夫曼树，共产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span>个新结点。</li>
</ul>
<p><img src="/assets/image/posts/nis73hu8/%E6%9E%84%E9%80%A0%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E4%BE%8B1.png" alt="构造哈夫曼树例1"></p>
<p><img src="/assets/image/posts/nis73hu8/%E6%9E%84%E9%80%A0%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E4%BE%8B2.png" alt="构造哈夫曼树例2"></p>
<p>总结：</p>
<ol>
<li>在哈夫曼算法中，初始时有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 棵二叉树，要经过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span> 次合并最终形成哈夫曼树。</li>
<li>经过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span> 次合并产生 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span> 个新结点，且这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span> 个新结点都是具有两个孩子的分支结点。</li>
</ol>
<p>可见：哈夫曼树中共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>=</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n+n-1=2n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个结点，且其所有的分支结点的度均不为1。</p>
<h2 id="哈夫曼树的构造算法">哈夫曼树的构造算法</h2>
<ol>
<li>初始化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mn>1...2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HT[1...2n-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord">1...2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> : <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>c</mi><mi>h</mi><mo>=</mo><mi>r</mi><mi>c</mi><mi>h</mi><mo>=</mo><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Ich=rch=parent=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">rc</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>；</li>
<li>输入初始 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个叶子结点：设置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mn>1...2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HT[1...2n-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord">1...2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 的weight值；</li>
<li>进行以下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span> 次合并，依次产生 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span> 个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>i</mi><mtext>＝</mtext><mi>n</mi><mo>+</mo><mn>1...2</mn><mi>n</mi><mtext>—</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">HT[i],i＝n+1...2n—1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">＝</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1...2</span><span class="mord mathnormal">n</span><span class="mord">—1</span></span></span></span>：
<ol>
<li>在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mn>1...</mn><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HT[1...i-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord">1...</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>中选两个未被选过（从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>=</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">parent==0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 的结点中选）的weight最小的两个结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HT[s1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HT[s2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mclose">]</span></span></span></span>，s1、s2为两个最小结点下标；</li>
<li>修改 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HT[s1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HT[s2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mclose">]</span></span></span></span> 的parent值:
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>=</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">HT[s1].parent=i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>;</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mn>2</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>=</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">HT[s2].parent=i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>;</li>
</ul>
</li>
<li>修改新产生的HT［i］：
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>=</mo><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>+</mo><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mn>2</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">HT[i].weight=HT[s1].weight + HT[s2].weight</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span></span></span></span>;</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>I</mi><mi>c</mi><mi>h</mi><mo>=</mo><mi>s</mi><mn>1</mn><mo separator="true">;</mo><mi>H</mi><mi>T</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>r</mi><mi>c</mi><mi>h</mi><mo>=</mo><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">HT[i].Ich=s1; HT[i].rch=s2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal">rc</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">s</span><span class="mord">2</span></span></span></span>;</li>
</ul>
</li>
</ol>
</li>
</ol>
<ul>
<li>采用顺序存储结构：一维数组</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">HuffmanTree H;</span><br></pre></td></tr></table></figure>
<ul>
<li>结点类型定义</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">  <span class="type">int</span> weight;</span><br><span class="line">  <span class="type">int</span> parent, lch, rch;</span><br><span class="line">&#125;HTNode, *HuffmanTree;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 构造哈夫曼树：哈夫曼算法</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreatHuffmanTree</span><span class="params">(HuffmanTree HT, <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(n &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">  m = <span class="number">2</span>*n<span class="number">-1</span>;                    <span class="comment">//数组共2n-1个元素</span></span><br><span class="line">  HT = <span class="keyword">new</span> HTNode[m+<span class="number">1</span>];         <span class="comment">//0号单元未使用，HT[m]表示根节点</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>, i &lt;= m; i++)&#123;  <span class="comment">//将2n-1个元素的lch, rch, parent 设置为0</span></span><br><span class="line">    HT[i].lch = <span class="number">0</span>;</span><br><span class="line">    HT[i].rch = <span class="number">0</span>;</span><br><span class="line">    HT[i].parent = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">    cin &gt;&gt; HT[i].weight;            <span class="comment">//输入前n个元素的weight值</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = n + <span class="number">1</span>; i &lt;= m; i++)&#123;  <span class="comment">//合并产生n—1个结点——构造Huffman树</span></span><br><span class="line">    <span class="built_in">Select</span>(HT, i<span class="number">-1</span>, s1, s2);        <span class="comment">//在HT[k](1≤k≤i—1)中选择两个其双亲域为0，</span></span><br><span class="line">                                    <span class="comment">//且权值最小的结点，并返回它们在HT中的序号s1和s2</span></span><br><span class="line">    HT[s1].parent = i;              <span class="comment">//表示从F中删除s1，s2</span></span><br><span class="line">    HT[s2].parent = i;</span><br><span class="line">    HT[i].lch = s1;                 <span class="comment">//s1，s2分别作为i的左右孩子</span></span><br><span class="line">    HT[i].rch = s2;</span><br><span class="line">    HT[i].weight = HT[s1].weight + HT[s2].weight;     <span class="comment">//i的权值为左右孩子权值之和</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="哈夫曼编码">哈夫曼编码</h2>
<p>在远程通讯中，要将待传字符转换成由二进制的字符串：</p>
<ul>
<li>设要传送的字符串为：ABACCDA</li>
<li>若编码为：A-00  B-01  C-10  D-11</li>
<li>则实际传输的字符串为：00010010101100</li>
</ul>
<p>若将编码设计为长度不等的二进制编码，即让待传字符串中出现次数较多的字符采用尽可能短的编码，则转换的二进制字符串便可能减少。</p>
<ul>
<li>设要传送的字符串为：ABACCDA</li>
<li>若编码为：A-0  B-00  C-1  D-01</li>
<li>则实际传输的字符串为：000011010</li>
<li>出现了重码：0000 可以代表 AAAA、ABA、BB</li>
</ul>
<blockquote>
<p>关键：要设计长度不等的编码，则必须使任一字符的编码都不是另一个字符的编码的前缀。这种编码称做前缀编码。</p>
</blockquote>
<p>问题：什么样的前缀码能使得电文总长最短？——哈夫曼编码</p>
<p>方法：</p>
<ol>
<li>统计字符集中每个字符在电文中出现的平均概率（概率越大，要求编码越短）。</li>
<li>利用哈夫曼树的特点：权越大的叶子离根越近；将每个字符的概率值作为权值，构造哈夫曼树。则概率越大的结点，路径越短。</li>
<li>在哈夫曼树的每个分支上标上0或1：<br>
结点的左分支标0，右分支标1<br>
把从根到每个叶子的路径上的标号连接起来，作为该叶子代表的字符的编码。</li>
</ol>
<p><img src="/assets/image/posts/nis73hu8/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81.png" alt="哈夫曼编码"></p>
<p>两个问题：</p>
<ol>
<li>为什么哈夫曼编码能够保证是前缀编码？<br>
因为没有一片树叶是另一片树叶的祖先，所以每个叶结点的编码就不可能是其它叶结点编码的前缀</li>
<li>为什么哈夫曼编码能够保证字符编码总长最短？<br>
因为哈夫曼树的带权路径长度最短，故字符编码的总长最短。</li>
</ol>
<p>性质：</p>
<ul>
<li>哈夫曼编码是前缀码</li>
<li>哈夫曼编码是最优前缀码</li>
</ul>
<h2 id="哈夫曼编码的算法实现">哈夫曼编码的算法实现</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreatHuffmanCode</span><span class="params">(HuffmanTree HT, HuffmanCode &amp;HC, <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">  <span class="comment">//从叶子到根逆向求每个字符的哈夫曼编码，存储在编码表HC中</span></span><br><span class="line">  HC = <span class="keyword">new</span> <span class="type">char</span> *[n+<span class="number">1</span>];     <span class="comment">//分配n个字符编码的头指针矢量</span></span><br><span class="line">  cd = <span class="keyword">new</span> <span class="type">char</span> [n];        <span class="comment">//分配临时存放编码的动态数组空间</span></span><br><span class="line">  cd[n<span class="number">-1</span>] = <span class="string">&#x27;\0&#x27;</span>;           <span class="comment">//编码结束符</span></span><br><span class="line">  <span class="comment">//逐个字符求哈夫曼编码</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">    start = n<span class="number">-1</span>;</span><br><span class="line">    c = i;</span><br><span class="line">    f = HT[i].parent;</span><br><span class="line">    <span class="keyword">while</span>(f!=<span class="number">0</span>)&#123;            <span class="comment">//从叶子结点开始向上回溯，直到根结点</span></span><br><span class="line">      start--;              <span class="comment">//回溯一次start向前指一个位置</span></span><br><span class="line">      <span class="keyword">if</span>(HT[f].lchild == c) cd[start] = <span class="string">&#x27;0&#x27;</span>;      <span class="comment">//结点c是f的左孩子，则生成代码0</span></span><br><span class="line">      <span class="keyword">else</span> cd[start] = <span class="string">&#x27;1&#x27;</span>;                       <span class="comment">//结点c是f的右孩子，则生成代码1</span></span><br><span class="line">      c = f;                <span class="comment">//继续向上回溯</span></span><br><span class="line">      f = HT[f].parent;</span><br><span class="line">    &#125;                             <span class="comment">//求出第i个字符的编码</span></span><br><span class="line">    HC[i] = <span class="keyword">new</span> <span class="type">char</span>[n-start];    <span class="comment">//为第i个字符串编码分配空间</span></span><br><span class="line">    <span class="built_in">strcpy</span>(HC[i], &amp;cd[start]);    <span class="comment">//将求得的编码从临时空间cd复制到HC的当前行中</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">delete</span> cd;                      <span class="comment">//释放临时空间</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="文件的编码和解码">文件的编码和解码</h2>
<p><img src="/assets/image/posts/nis73hu8/%E8%8B%B1%E8%AF%AD%E4%B8%AD%E5%90%84%E5%AD%97%E6%AF%8D%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87.png" alt="英语中各字母出现频率"></p>
<p>编码:</p>
<ol>
<li>输入各字符及其权值</li>
<li>构造哈夫曼树——<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>C</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HC[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span></li>
<li>进行哈夫曼编码——<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>C</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HC[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span></li>
<li>查 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>C</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">HC[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>，得到各字符的哈夫曼编码</li>
</ol>
<p>解码:</p>
<ol>
<li>构造哈夫曼树</li>
<li>依次读入二进制码</li>
<li>读入0，则走向左孩子；读入1，则走向右孩子④ 一旦到达某叶子时，即可译出字符</li>
<li>然后再从根出发继续译码，指导结束</li>
</ol>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构与算法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>树</tag>
        <tag>哈夫曼树</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年学习记录 - 图的定义和术语</title>
    <url>/posts/tude98j8/</url>
    <content><![CDATA[<h2 id="声明">声明</h2>
<blockquote>
<p>本节内容来源于 BiliBili视频<a href="https://www.bilibili.com/video/BV1nJ411V7bd">数据结构与算法基础（青岛大学-王卓）</a> 的 P108 - P110，本博客仅作笔记整理和学习记录，部分图片来自视频截图。</p>
</blockquote>
<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-dXEaksRbgXMFRWeT" src="https://player.bilibili.com/player.html?bvid=BV1nJ411V7bd&page=108&high_quality=1&danmaku=true&autoplay=0" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-dXEaksRbgXMFRWeT").style.height=document.getElementById("mmedia-dXEaksRbgXMFRWeT").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-dXEaksRbgXMFRWeT").style.height=document.getElementById("mmedia-dXEaksRbgXMFRWeT").scrollWidth*0.76+"px";
    }; </script>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构与算法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>图</tag>
        <tag>定义</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年学习记录 - 树和二叉树的定义</title>
    <url>/posts/sd348fj4/</url>
    <content><![CDATA[<h2 id="声明">声明</h2>
<blockquote>
<p>本节内容来源于 BiliBili视频<a href="https://www.bilibili.com/video/BV1nJ411V7bd">数据结构与算法基础（青岛大学-王卓）</a> 的 P76 - P80，本博客仅作笔记整理和学习记录，部分图片来自视频截图。</p>
</blockquote>
<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-EgXoGDeTrPxqebIr" src="https://player.bilibili.com/player.html?bvid=BV1nJ411V7bd&page=76&high_quality=1&danmaku=true&autoplay=0" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-EgXoGDeTrPxqebIr").style.height=document.getElementById("mmedia-EgXoGDeTrPxqebIr").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-EgXoGDeTrPxqebIr").style.height=document.getElementById("mmedia-EgXoGDeTrPxqebIr").scrollWidth*0.76+"px";
    }; </script>
<h2 id="结点和节点的区别">结点和节点的区别</h2>
<ul>
<li>节点是一个实体，它具有处理能力，比如网络上的一台计算机。</li>
<li>结点是一个交叉点、一个标记，算法中的点一般都称为结点，数据结构中的每一个数据元素都用中间标有元素值的方框来表示，我们称它为结点。</li>
</ul>
<p>简单来说，节点是有功能的，而结点是有数据的。</p>
<h2 id="树">树</h2>
<h3 id="树的特点">树的特点</h3>
<ul>
<li>逻辑结构：非线性结构</li>
<li>常用于有层次的结构</li>
<li>一对多</li>
</ul>
<h3 id="树的定义">树的定义</h3>
<p>树（Tree）是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≥</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n \geq 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 个结点的有限集。<br>
若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ，称为空树；<br>
若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ，有且仅有一个根（Root），可分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo stretchy="false">(</mo><mi>m</mi><mo>≥</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m(m \geq 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 个互不相交的有限集，其中每个集合本身又是一棵树，并称为根的子树（SubTree）。</p>
<ul>
<li>树的定义是递归的定义。</li>
</ul>
<h3 id="树的表示方式">树的表示方式</h3>
<ul>
<li>示意图</li>
<li>嵌套集合</li>
<li>凹入表示</li>
<li>广义表</li>
</ul>
<p><img src="/assets/image/posts/sd348fj4/%E6%A0%91%E7%9A%84%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95.png" alt="树的表示方法"></p>
<h3 id="树的基本术语">树的基本术语</h3>
<ul>
<li>结点：数据元素以及指向子树的分支</li>
<li>根节点：非空树中无前驱结点的结点</li>
<li>节点的度：结点拥有的子树数</li>
<li>树的度：树内各结点的度的最大值</li>
<li>叶子（结点）：终端结点（度 = 0）</li>
<li>分支结点：非终端结点（度 ≠ 0）</li>
<li>内部结点：根节点以外的分支结点</li>
<li>孩子和双亲：结点的子树的根成为该节点的孩子，该节点称为孩子的双亲</li>
<li>兄弟：有共同双亲的结点</li>
<li>堂兄弟：双亲在同一层的结点</li>
<li>结点的祖先：从根到该结点所经分支上的所有结点</li>
<li>树的深度：树中结点的最大层次</li>
<li>有序树：树中结点的各子树从左至右有次序（最左边的为第一个孩子）</li>
<li>无序树：树中结点的各子树无次序</li>
<li>森林：是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo stretchy="false">(</mo><mi>m</mi><mo>≥</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m(m \geq 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 棵互不相交的树的集合<br>
Tip:树一定是森林，森林不一定是树。</li>
</ul>
<h2 id="二叉树">二叉树</h2>
<p>为何要重点研究每结点最多只有两个“叉”的树？</p>
<ul>
<li>二叉树的结构最简单，规律性最强；</li>
<li>可以证明，所有树都能转为唯一对应的二叉树，不失一般性。普通树（多叉树）若不转化为二叉树，则运算很难实现。</li>
</ul>
<p>二叉树在树结构的应用中起着非常重要的作用，因为对二叉的许多操作算法简单，而任何树都可以与二叉树相互转换，这样就解决了树的存储结构及其运算中存在的复杂性。</p>
<h3 id="二叉树的定义">二叉树的定义</h3>
<p>二叉树是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≥</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n \geq 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 个结点的有限集，它或者是空集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>=</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n = 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，或者由一个根结点及两棵互不相交的分别称作这个根的左子树和右子树的二叉树组成。</p>
<p>特点：</p>
<ol>
<li>每个结点最多有俩孩子（二叉树中不存在度大于2的结点）。</li>
<li>子树有左右之分，其次序不能颠倒。</li>
<li>二叉树可以是空集合，根可以有空的左子树或空的右子树。</li>
</ol>
<p>Tip: 二叉树不是树的特殊情况</p>
<p><img src="/assets/image/posts/sd348fj4/%E6%80%9D%E8%80%831.png" alt="思考1"></p>
<p><img src="/assets/image/posts/sd348fj4/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%BA%94%E7%A7%8D%E5%9F%BA%E6%9C%AC%E5%BD%A2%E6%80%81.png" alt="二叉树的五种基本形态"></p>
<p>Tip：虽然二叉树与树概念不同，但有关<a href="#%E6%A0%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%9C%AF%E8%AF%AD">树的基本术语</a>对二叉树都适用。</p>
<h3 id="二叉树的应用案例">二叉树的应用案例</h3>
<ul>
<li>数据压缩问题</li>
<li>利用二叉树求表达式的值</li>
</ul>
<h2 id="树和二叉树的抽象数据类型定义">树和二叉树的抽象数据类型定义</h2>
<p>二叉树中的重要操作：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">CreateBiTree</span>(&amp;T,definition)</span><br><span class="line">初始条件；definition给出二叉树T的定义。</span><br><span class="line">操作结果：按definition构造二叉树T。 </span><br><span class="line"></span><br><span class="line"><span class="built_in">PreOrderTraverse</span>(T)</span><br><span class="line">初始条件：二叉树T存在。</span><br><span class="line">操作结果：先序遍历T，对每个结点访问一次。</span><br><span class="line"></span><br><span class="line"><span class="built_in">InOrderTraverse</span>(T)</span><br><span class="line">初始条件：二叉树T存在。</span><br><span class="line">操作结果：中序遍历T，对每个结点访问一次。</span><br><span class="line"></span><br><span class="line"><span class="built_in">PostOrderTraverse</span>(T)</span><br><span class="line">初始条件：二叉树T存在。</span><br><span class="line">操作结果：后序遍历T，对每个结点访问一次。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构与算法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>二叉树</tag>
        <tag>树</tag>
        <tag>定义</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年学习记录 - 树和森林</title>
    <url>/posts/je8dn5hy/</url>
    <content><![CDATA[<h2 id="声明">声明</h2>
<blockquote>
<p>本节内容来源于 BiliBili视频<a href="https://www.bilibili.com/video/BV1nJ411V7bd">数据结构与算法基础（青岛大学-王卓）</a> 的 P95 - P100，本博客仅作笔记整理和学习记录，部分图片来自视频截图。</p>
</blockquote>
<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-crCcaBpFZslGanfa" src="https://player.bilibili.com/player.html?bvid=BV1nJ411V7bd&page=95&high_quality=1&danmaku=true&autoplay=0" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-crCcaBpFZslGanfa").style.height=document.getElementById("mmedia-crCcaBpFZslGanfa").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-crCcaBpFZslGanfa").style.height=document.getElementById("mmedia-crCcaBpFZslGanfa").scrollWidth*0.76+"px";
    }; </script>
<h2 id="树和森林">树和森林</h2>
<p>定义：<a href="/posts/sd348fj4/#%E6%A0%91">传送门</a></p>
<h2 id="树的存储结构">树的存储结构</h2>
<h3 id="双亲表示法（静态链表）">双亲表示法（静态链表）</h3>
<p>实现：定义结构数组存放树的结点，每个结点含两个域：</p>
<ul>
<li>数据域：存放结点本身信息。</li>
<li>双亲域：指示本结点的双亲结点在数组中的位置。</li>
</ul>
<p>特点：找双亲容易，找孩子难。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">PTNode</span>&#123;</span><br><span class="line">  TElemType data;</span><br><span class="line">  <span class="type">int</span> parent;     <span class="comment">//双亲位置域</span></span><br><span class="line">&#125;PTNode;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_TREE_SIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">  PTNode nodes[MAX_TREE_SIZE];</span><br><span class="line">  <span class="type">int</span> r, n;       <span class="comment">//根节点的位置和结点个数</span></span><br><span class="line">&#125;PTree;</span><br></pre></td></tr></table></figure>
<h3 id="孩子链表">孩子链表</h3>
<p>把每个结点的孩子结点排列起来，看成是一个线性表，用单链表存储。则n个结点有n个孩子链表（叶子的孩子链表为空表）。而n个头指针又组成一个线性表，用顺序表（含n个元素的结构数组）存储。</p>
<p>特点：找孩子容易，找双亲难。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">CTNode</span>&#123;</span><br><span class="line">  <span class="type">int</span> child;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">CTNode</span> *next;</span><br><span class="line">&#125; *ChildePtr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">  TElemType data;</span><br><span class="line">  ChildPtr firstchild;     <span class="comment">//孩子链表头指针</span></span><br><span class="line">&#125; CTBox;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">  CTBox nodes[MAX_TREE_SIZE];</span><br><span class="line">  <span class="type">int</span> n, r;                <span class="comment">//根节点的位置和结点个数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以使用带双亲的孩子链表：以空间换时间</p>
<h3 id="孩子兄弟表示法（二叉树表示法，二叉链表表示法）">孩子兄弟表示法（二叉树表示法，二叉链表表示法）</h3>
<p>实现：用二叉链表作树的存储结构，链表中每个结点的两个指针域分别指向其第一个孩子结点和下一个兄弟结点</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">CSNode</span>&#123;</span><br><span class="line">  ElemType data;</span><br><span class="line">  stryct CSNode *firstchild, *nextsibling;</span><br><span class="line">&#125;CSNode, *CSTree;</span><br></pre></td></tr></table></figure>
<h2 id="树与二叉树的转换">树与二叉树的转换</h2>
<p>将树转化为二叉树进行处理，利用二叉树的算法来实现对树的操作。</p>
<p>由于树和二叉树都可以用二叉链表作存储结构，则以二叉链表作媒介可以导出树与二叉树之间的一个对应关系。</p>
<p><img src="/assets/image/posts/je8dn5hy/%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB.png" alt="树和二叉树的对应关系"></p>
<h3 id="将树转换成二叉树">将树转换成二叉树</h3>
<ol>
<li>加线：在兄弟之间加一连线</li>
<li>抹线：对每个结点，除了其左孩子外，去除其与其余孩子之间的关系</li>
<li>旋转：以树的根结点为轴心，将整树顺时针转45°</li>
</ol>
<p>口诀：树变二叉树：兄弟相连留长子</p>
<p><img src="/assets/image/posts/je8dn5hy/%E5%B0%86%E6%A0%91%E8%BD%AC%E6%8D%A2%E6%88%90%E4%BA%8C%E5%8F%89%E6%A0%91.png" alt="将树转换成二叉树"></p>
<h3 id="将二叉树转换成树">将二叉树转换成树</h3>
<ol>
<li>加线：若p结点是双亲结点的左孩子，则将p的右孩子，右孩子的右孩子…沿分支找到的所有右孩子，都与p的双亲用线连起来</li>
<li>抹线：抹掉原二叉树中双亲与右孩子之间的连线</li>
<li>调整：将结点按层次排列，形成树结构</li>
</ol>
<p>口诀：左孩右右连双亲，去掉原来右孩线。</p>
<p><img src="/assets/image/posts/je8dn5hy/%E5%B0%86%E4%BA%8C%E5%8F%89%E6%A0%91%E8%BD%AC%E6%8D%A2%E6%88%90%E6%A0%91.png" alt="将二叉树转换成树"></p>
<h2 id="森林与二叉树的转换">森林与二叉树的转换</h2>
<p>即：二叉树与多棵树之间的关系</p>
<h3 id="将森林转换成二叉树">将森林转换成二叉树</h3>
<ol>
<li>将各棵树分别转换成二叉树</li>
<li>将每棵树的根结点用线相连</li>
<li>以第一棵树根结点为二叉树的根，再以根结点为轴心，顺时针旋转，构成二叉树型结构</li>
</ol>
<p>口诀：树变二叉根相连。</p>
<p><img src="/assets/image/posts/je8dn5hy/%E5%B0%86%E6%A3%AE%E6%9E%97%E8%BD%AC%E6%8D%A2%E6%88%90%E4%BA%8C%E5%8F%89%E6%A0%91.png" alt="将森林转换成二叉树"></p>
<h3 id="将二叉树转换成森林">将二叉树转换成森林</h3>
<ol>
<li>抹线：将二叉树中根结点与其右孩子连线，及沿右分支搜索到的所有右孩子间连线全部抹掉，使之变成孤立的二叉树</li>
<li>还原：将孤立的二叉树还原成树二叉树变森林</li>
</ol>
<p>口诀：去掉全部右孩线，孤立二叉再还原。</p>
<p><img src="/assets/image/posts/je8dn5hy/%E5%B0%86%E4%BA%8C%E5%8F%89%E6%A0%91%E8%BD%AC%E6%8D%A2%E6%88%90%E6%A3%AE%E6%9E%97.png" alt="将二叉树转换成森林"></p>
<h2 id="树与森林的遍历">树与森林的遍历</h2>
<h3 id="树的遍历">树的遍历</h3>
<p>树的遍历有三种方式：</p>
<ol>
<li>先根（次序）遍历：<br>
若树不空，则先访问根结点，然后依次先根遍历各棵子树。</li>
<li>后根（次序）遍历：<br>
若树不空，则先依次后根遍历各棵子树，然后访问根结点。</li>
<li>按层次遍历：<br>
若树不空，则自上而下自左至右访问树中每个结点。</li>
</ol>
<p><img src="/assets/image/posts/je8dn5hy/%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86.png" alt="树的遍历"></p>
<h3 id="森林的遍历">森林的遍历</h3>
<p>将森林看作由三部分构成：</p>
<ol>
<li>森林中第一棵树的根结点；</li>
<li>森林中第一棵树的子树森林；</li>
<li>森林中其它树构成的森林。</li>
</ol>
<h4 id="先序遍历">先序遍历</h4>
<p>若森林不空，则</p>
<ol>
<li>访问森林中第一棵树的根结点；</li>
<li>先序遍历森林中第一棵树的子树森林；</li>
<li>先序遍历森林中（除第一棵树之外）其余树构成的森林。</li>
</ol>
<p>即：依次从左至右对森林中的每一棵树进行先根遍历。</p>
<h4 id="中序遍历">中序遍历</h4>
<p>若森林不空，则</p>
<ol>
<li>中序遍历森林中第一棵树的子树森林；</li>
<li>访问森林中第一棵树的根结点；</li>
<li>中序遍历森林中（除第一棵树之外）其余树构成的森林。</li>
</ol>
<p>即：依次从左至右对森林中的每一棵树进行后根遍历。</p>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构与算法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>树</tag>
        <tag>森林</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年学习记录 - 线索二叉树</title>
    <url>/posts/zndi38us/</url>
    <content><![CDATA[<h2 id="声明">声明</h2>
<blockquote>
<p>本节内容来源于 BiliBili视频<a href="https://www.bilibili.com/video/BV1nJ411V7bd">数据结构与算法基础（青岛大学-王卓）</a> 的 P94，本博客仅作笔记整理和学习记录，部分图片来自视频截图。</p>
</blockquote>
<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-ZfrznZyzwvUvqjdy" src="https://player.bilibili.com/player.html?bvid=BV1nJ411V7bd&page=94&high_quality=1&danmaku=true&autoplay=0" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-ZfrznZyzwvUvqjdy").style.height=document.getElementById("mmedia-ZfrznZyzwvUvqjdy").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-ZfrznZyzwvUvqjdy").style.height=document.getElementById("mmedia-ZfrznZyzwvUvqjdy").scrollWidth*0.76+"px";
    }; </script>
<h2 id="线索二叉树">线索二叉树</h2>
<p>Q：为什么要研究线索二叉树？</p>
<p>当用二叉链表作为二叉树的存储结构时，可以很方便地找到某个结点的左右孩子；但一般情况下，无法直接找到该结点在某种遍历序列中的前驱和后继结点。</p>
<p>Q：如何寻找特定遍历序列中二叉树结点的前驱和后继？</p>
<ol>
<li>通过遍历寻找————费时间。</li>
<li>再增设前驱、后继指针域————增加了存储负担。</li>
<li>利用二叉链表中的空指针域。</li>
</ol>
<p><img src="/assets/image/posts/zndi38us/%E4%BA%8C%E5%8F%89%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%A9%BA%E6%8C%87%E9%92%88%E5%9F%9F%E7%9A%84%E6%95%B0%E9%87%8F.png" alt="二叉链表中空指针域的数量"></p>
<p>利用二叉链表中的空指针域：<br>
如果某个结点的左孩子为空，则将空的左孩子指针域改为指向其前驱；如果某结点的右孩子为空，则将空的右孩子指针域改为指向其后继<br>
————这种改变指向的指针称为“线索”<br>
加上了线索的二叉树称为线索二叉树(Threaded Binary Tree) 对二叉树按某种遍历次序使其变为线索二叉树的过程叫线索化。</p>
<p><img src="/assets/image/posts/zndi38us/%E7%BA%BF%E7%B4%A2%E5%8C%96%E8%BF%87%E7%A8%8B.png" alt="线索化过程"></p>
<p>为区分 lrchid 和 rchild 指针到底是指向孩子的指针，还是指向前驱或有后继的指针，对二叉链表中每个结点增设两个标志域 ltag 和 rtag ，并约定：</p>
<table>
<thead>
<tr>
<th>标志域</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>Itag = 0</td>
<td>Ichild 指向该结点的左孩子</td>
</tr>
<tr>
<td>ltag = 1</td>
<td>Ichild 指向该结点的前驱</td>
</tr>
<tr>
<td>rtag = 0</td>
<td>rchild 指向该结点的右孩子</td>
</tr>
<tr>
<td>rtag = 1</td>
<td>rchild 指向该结点的后继</td>
</tr>
</tbody>
</table>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BiThrNode</span>&#123;</span><br><span class="line">  <span class="type">int</span> data;</span><br><span class="line">  <span class="type">int</span> ltag, rtag;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">BiThrNode</span> *lchild, rchild;</span><br><span class="line">&#125;BiThrNode, *BiThrTree;</span><br></pre></td></tr></table></figure>
<p>⭐为了方便数据的处理，我们要额外增加一个头节点：</p>
<p><img src="/assets/image/posts/zndi38us/%E5%A2%9E%E8%AE%BE%E5%A4%B4%E8%8A%82%E7%82%B9.png" alt="增设头节点"></p>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构与算法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>二叉树</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年学习记录 - 遍历二叉树基础</title>
    <url>/posts/snd9tnx8/</url>
    <content><![CDATA[<h2 id="声明">声明</h2>
<blockquote>
<p>本节内容来源于 BiliBili视频<a href="https://www.bilibili.com/video/BV1nJ411V7bd">数据结构与算法基础（青岛大学-王卓）</a> 的 P86 - P88，本博客仅作笔记整理和学习记录，部分图片来自视频截图。</p>
</blockquote>
<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-HFvZIaDuwuoVcjXK" src="https://player.bilibili.com/player.html?bvid=BV1nJ411V7bd&page=84&high_quality=1&danmaku=true&autoplay=0" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-HFvZIaDuwuoVcjXK").style.height=document.getElementById("mmedia-HFvZIaDuwuoVcjXK").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-HFvZIaDuwuoVcjXK").style.height=document.getElementById("mmedia-HFvZIaDuwuoVcjXK").scrollWidth*0.76+"px";
    }; </script>
<h2 id="遍历二叉树">遍历二叉树</h2>
<ul>
<li>遍历定义：顺着某一条搜索路径巡访二叉树中的结点，使得每个结点均被访问一次，而且仅被访问一次（又称周游）。<br>
“访问”的含义很广，可以是对结点作各种处理，如：输出结点的信息、修改结点的数据值等，但要求这种访问不破坏原来的数据结构。</li>
<li>遍历目的：得到树中所有结点的一个线性排列。</li>
<li>遍历用途：它是树结构插入、删除、修改、查找和排序运算的前提，是二叉树一切运算的基础和核心。</li>
<li>遍历方法：依次遍历二叉树中的三个组成部分，便是遍历了整个二叉树</li>
</ul>
<h3 id="遍历方法">遍历方法</h3>
<p>假设：  L：遍历左子树   D：访问根结点   R：遍历右子树<br>
则遍历整个二叉树方案共有：DLR、LDR、 LRD、DRL、RDL、RLD 六种。<br>
若规定先左后右，则有：</p>
<ul>
<li>DLR：先（根）序遍历</li>
<li>LDR：中（根）序遍历</li>
<li>LRD：后（根）序遍历</li>
</ul>
<p><img src="/assets/image/posts/snd9tnx8/%E9%81%8D%E5%8E%86%E4%BA%8C%E5%8F%89%E6%A0%91%E7%AE%97%E6%B3%95%E6%8F%8F%E8%BF%B0.png" alt="遍历二叉树算法描述"></p>
<p><img src="/assets/image/posts/snd9tnx8/%E9%81%8D%E5%8E%86%E9%A1%BA%E5%BA%8F%E4%BE%8B%E9%A2%98.png" alt="遍历顺序例题"></p>
<h3 id="⭐用二叉树表示算数表达式">⭐用二叉树表示算数表达式</h3>
<p><img src="/assets/image/posts/snd9tnx8/%E7%94%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E8%A1%A8%E7%A4%BA%E7%AE%97%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BE%8B%E9%A2%98.png" alt="用二叉树表示算数表达式例题"></p>
<h3 id="根据遍历序列确定二叉树">根据遍历序列确定二叉树</h3>
<ul>
<li>若二叉树中各结点的值均不相同，则二叉树结点的先序序列、中序序列和后序列都是唯一的。</li>
<li>由二叉树的先序序列和中序序列，或由二叉树的后序序列和中序序列可以确定唯一棵二叉树。</li>
</ul>
<h3 id="⭐已知二序列求二叉树">⭐已知二序列求二叉树</h3>
<p><img src="/assets/image/posts/snd9tnx8/%E5%B7%B2%E7%9F%A5%E5%85%88%E5%BA%8F%E5%92%8C%E4%B8%AD%E5%BA%8F%E5%BA%8F%E5%88%97%E6%B1%82%E4%BA%8C%E5%8F%89%E6%A0%911.png" alt="已知先序和中序序列求二叉树1"><br>
<img src="/assets/image/posts/snd9tnx8/%E5%B7%B2%E7%9F%A5%E5%85%88%E5%BA%8F%E5%92%8C%E4%B8%AD%E5%BA%8F%E5%BA%8F%E5%88%97%E6%B1%82%E4%BA%8C%E5%8F%89%E6%A0%912.png" alt="已知先序和中序序列求二叉树2"><br>
<img src="/assets/image/posts/snd9tnx8/%E5%B7%B2%E7%9F%A5%E5%85%88%E5%BA%8F%E5%92%8C%E4%B8%AD%E5%BA%8F%E5%BA%8F%E5%88%97%E6%B1%82%E4%BA%8C%E5%8F%89%E6%A0%913.png" alt="已知先序和中序序列求二叉树3"><br>
<img src="/assets/image/posts/snd9tnx8/%E5%B7%B2%E7%9F%A5%E4%B8%AD%E5%BA%8F%E5%92%8C%E5%90%8E%E5%BA%8F%E5%BA%8F%E5%88%97%E6%B1%82%E4%BA%8C%E5%8F%89%E6%A0%91.png" alt="已知中序和后序序列求二叉树"></p>
<h2 id="二叉树递归算法分析">二叉树递归算法分析</h2>
<h3 id="二叉树的先序递归遍历算法">二叉树的先序递归遍历算法</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Ststus <span class="title">PreOrderTraverse</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> OK;  <span class="comment">//空二叉树</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">visit</span>(T); <span class="comment">//访问根节点</span></span><br><span class="line">    <span class="built_in">PreOrderTraverse</span>(T-&gt;lchild);  <span class="comment">//递归遍历左子树</span></span><br><span class="line">    <span class="built_in">PreOrderTraverse</span>(T-&gt;rchild);  <span class="comment">//递归遍历右子树</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实现</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Pre</span><span class="params">(BiTree *T)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, T-&gt;data);</span><br><span class="line">    <span class="built_in">pre</span>(T-&gt;lchild);</span><br><span class="line">    <span class="built_in">pre</span>(T-&gt;rchild);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="二叉树的中序递归遍历算法">二叉树的中序递归遍历算法</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Ststus <span class="title">InOrderTraverse</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> OK;  <span class="comment">//空二叉树</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T-&gt;lchild);  <span class="comment">//递归遍历左子树</span></span><br><span class="line">    <span class="built_in">visit</span>(T); <span class="comment">//访问根节点</span></span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T-&gt;rchild);  <span class="comment">//递归遍历右子树</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="二叉树的后序递归遍历算法">二叉树的后序递归遍历算法</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Ststus <span class="title">PostOrderTraverse</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span> OK;  <span class="comment">//空二叉树</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">PostOrderTraverse</span>(T-&gt;lchild);  <span class="comment">//递归遍历左子树</span></span><br><span class="line">    <span class="built_in">PostOrderTraverse</span>(T-&gt;rchild);  <span class="comment">//递归遍历右子树</span></span><br><span class="line">    <span class="built_in">visit</span>(T); <span class="comment">//访问根节点</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="遍历算法的分析">遍历算法的分析</h3>
<p><img src="/assets/image/posts/snd9tnx8/%E9%81%8D%E5%8E%86%E7%AE%97%E6%B3%95%E7%9A%84%E5%88%86%E6%9E%90.png" alt="遍历算法的分析"></p>
<p>时间效率: $ O(n) $<br>
空间效率: $ O(n) $</p>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构与算法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>二叉树</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2025学年竞赛成果总结</title>
    <url>/posts/awardist/</url>
    <content><![CDATA[<h2 id="背景">背景</h2>
<p>不知不觉上大学已经一年了，这一年的成长不是三言两语能说清的，现就一些方面总结一下。</p>
<h2 id="编程技能成果">编程技能成果</h2>
<p>CodeForces Rating: 1429<br>
牛客 Rating: 1276<br>
*截止到2025年4月3日，跳转到<a href="https://clist.by/coder/muyangplus/">【Clist】</a>页面</p>
<h2 id="学习-竞赛成果">学习/竞赛成果</h2>
<p>国家级 3 项、省级 5 项、校级 5 项、院级 1 项、其它 3 项。</p>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2024</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10月</p>
</div></div><div class='timeline-item-content'><p>【院】环境科学与工程学院红色主题配音大赛 二等奖</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11月</p>
</div></div><div class='timeline-item-content'><p>【校】苏州科技大学第十届校程序设计竞赛 一等奖<br>
【校】苏州科技大学2024级班长苏州能力培训实践活动 团队三等奖</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>12月</p>
</div></div><div class='timeline-item-content'><p>【校】苏州科技大学程序设计练习赛 Round 1 铜奖<br>
【校】苏州科技大学2024-2025学年第一学期学风建设月系列活动————“最佳学风班会评比” 二等奖</p>
</div></div></div>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2025</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2月</p>
</div></div><div class='timeline-item-content'><p>【训】<strong>2025牛客寒假算法集训营 二等奖（全国排名1895）</strong></p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>3月</p>
</div></div><div class='timeline-item-content'><p>【训】苏州科技大学2025年大学生寒假红色专项社会实践 先进个人</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>5月</p>
</div></div><div class='timeline-item-content'><p><a href="/posts/os84nc7s">【省】</a><strong>第十六届蓝桥杯全国软件和信息技术专业人才大赛 一等奖（JSCB）</strong><br>
【省】<strong>2025年（第十二届）江苏省大学生计算机设计大赛 二等奖</strong><br>
【校】苏州科技大学第七届大学生节能减排社会实践与科技竞赛 特等奖、一等奖</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>6月</p>
</div></div><div class='timeline-item-content'><p><a href="/posts/os84nc7s">【国】</a><strong>第十六届蓝桥杯全国软件和信息技术专业人才大赛 一等奖（CB）</strong><br>
【省】<strong>“华为杯” 2025 江苏省大学生程序设计大赛 铜奖（JSCPC）</strong><br>
【省】2025年第二十七届中国机器人及人工智能大赛 三等奖</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>7月</p>
</div></div><div class='timeline-item-content'><p>【省】<strong>2025年睿抗机器人开发者大赛(RAICOM) 二等奖</strong></p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>8月</p>
</div></div><div class='timeline-item-content'><p>【国】<strong>2025年睿抗机器人开发者大赛(RAICOM) 二等奖</strong><br>
【国】“招行杯”第十八届全国大学生节能减排社会实践与科技竞赛 三等奖</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>9月</p>
</div></div><div class='timeline-item-content'><p>【训】<strong>2025牛客暑期多校训练营 三等奖（全国排名737）</strong></p>
</div></div></div>
]]></content>
      <categories>
        <category>竞赛</category>
      </categories>
      <tags>
        <tag>ACM</tag>
        <tag>OI</tag>
        <tag>竞赛</tag>
      </tags>
  </entry>
  <entry>
    <title>2025年第十六届蓝桥杯比赛记录</title>
    <url>/posts/os84nc7s/</url>
    <content><![CDATA[<h2 id="背景">背景</h2>
<p>听说蓝桥杯含金量很高？</p>
<h2 id="蓝桥杯省赛">蓝桥杯省赛</h2>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2024</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>12-11</p>
</div></div><div class='timeline-item-content'><p>省赛报名缴费，生活费 -300￥。</p>
</div></div></div>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2025</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>04-12</p>
</div></div><div class='timeline-item-content'><p>省赛于<strong>苏州科技大学</strong>举行，当天苏州刮台风，下暴雨，很浸润的一次参赛体验。<br>
赛前没有复习，赛后对答案感觉自己考了一坨。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>04-30</p>
</div></div><div class='timeline-item-content'><p>省赛出pdf，江苏省一等奖，成功晋级国赛！</p>
</div></div></div>
<h3 id="蓝桥杯省赛赛后总结">蓝桥杯省赛赛后总结</h3>
<p>果然我还是更熟悉 OI 赛制。<br>
省赛蓝桥杯果然很水，到国赛应该就难了，心理预期：国二。</p>
<h2 id="蓝桥杯国赛">蓝桥杯国赛</h2>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2025</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-25</p>
</div></div><div class='timeline-item-content'><p>国赛报名缴费，生活费 -300￥。<s>（说好进国赛报销的呢？）</s></p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>06-14</p>
</div></div><div class='timeline-item-content'><p>竟然住上了学校定的酒店！？路费竟然可以报销！？果然苏科大还是爱我的。<br>
于是<s>组团打了一晚上的三国杀</s>。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>06-15</p>
</div></div><div class='timeline-item-content'><p>国赛于<strong>南京财经大学</strong>举行，当天手机坏了，很昂贵的一次参赛体验。<br>
赛前还是没有复习，赛后对答案又感觉自己考了一坨。<br>
赛后手机送修，过了两天原始人生活，幸好还在保修期内（回到苏州竟然又下雨了Q-Q）。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>06-23</p>
</div></div><div class='timeline-item-content'><p>蓝桥杯出成绩，竟然连pdf都没了…<br>
但重生之我竟是国一！</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>06-25</p>
</div></div><div class='timeline-item-content'><p>上学校官网了！<s>原来我得了MVP</s><br>
苏州科技大学新闻网：<a href="https://news.usts.edu.cn/info/1040/29069.htm">我校在第十六届“蓝桥杯”全国软件和信息技术专业人才大赛中获佳绩</a><br>
电子与信息工程学院新闻：<a href="https://eie.usts.edu.cn/info/1092/5703.htm">国一2项！国二5项！电子学院在第十六届“蓝桥杯”全国软件和信息技术专业人才大赛喜报</a></p>
</div></div></div>
<h3 id="蓝桥杯国赛赛后总结">蓝桥杯国赛赛后总结</h3>
<p>国赛又全是数论+暴力，几乎没算法。<br>
暴力打满+思维灵活就够了！</p>
<h2 id="竞赛合集">竞赛合集</h2>
<a class="btn-beautify red" href="/posts/awardist" 
  title="传送门"><i class="far fa-hand-point-right"></i><span>传送门</span></a>
]]></content>
      <categories>
        <category>竞赛</category>
      </categories>
      <tags>
        <tag>OI</tag>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>API 应用发布页</title>
    <url>/posts/iamyyapi/</url>
    <content><![CDATA[<p><a href="https://uptime.muyangplus.top/status/website">点我</a>查看服务运行状态。</p>
<h2 id="博客">博客</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>ID</th>
<th>访问</th>
</tr>
</thead>
<tbody>
<tr>
<td>博客主站</td>
<td>Vercel</td>
<td><a href="http://www.muyangplus.top/">访问</a></td>
</tr>
<tr>
<td>博客镜像</td>
<td>Gitee</td>
<td>已下线</td>
</tr>
<tr>
<td>博客镜像</td>
<td>Github</td>
<td><a href="http://blog.muyangplus.top/">访问</a></td>
</tr>
<tr>
<td>博客镜像</td>
<td>Netlify</td>
<td><a href="http://muyangplus.netlify.app/">访问</a></td>
</tr>
</tbody>
</table>
<h2 id="应用">应用</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>ID</th>
<th>访问</th>
</tr>
</thead>
<tbody>
<tr>
<td>Alist 云盘</td>
<td>cloud</td>
<td>已失效</td>
</tr>
<tr>
<td>ChatGPT 镜像</td>
<td>chat-gpt-next-web</td>
<td><a href="https://chat.muyangplus.top/">访问</a></td>
</tr>
<tr>
<td>新必应</td>
<td>go-proxy-bingai</td>
<td><a href="https://bingai.muyangplus.top/">访问</a></td>
</tr>
<tr>
<td>服务监控</td>
<td>uptime-kuma</td>
<td>已失效</td>
</tr>
</tbody>
</table>
<h2 id="API-接口">API 接口</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>ID</th>
<th>访问</th>
</tr>
</thead>
<tbody>
<tr>
<td>GitHub 统计</td>
<td>github-readme-stats</td>
<td><a href="https://github-readme-stats.muyangplus.top/">访问</a></td>
</tr>
<tr>
<td>随机图片</td>
<td>random-picture</td>
<td><a href="https://random-picture.muyangplus.top/">访问</a></td>
</tr>
<tr>
<td>新必应</td>
<td>sydney</td>
<td>已弃用</td>
</tr>
<tr>
<td>Twikoo 评论</td>
<td>twikoo-comments</td>
<td><a href="https://twikoo-comments.muyangplus.top/">访问</a></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>公告</category>
      </categories>
      <tags>
        <tag>API</tag>
        <tag>GitHub</tag>
        <tag>Vercel</tag>
      </tags>
  </entry>
  <entry>
    <title>CSP-S/NOIP 2022 比赛合集</title>
    <url>/posts/c917ed75/</url>
    <content><![CDATA[<h2 id="背景">背景</h2>
<p>经历了近6个月的紧张学习（从3月份开始），我们终于迎来了第一场正式比赛 CSP-S（一上来就考提高组~~（高二考生的痛）~~）。</p>
<h2 id="CSP-S1-2022">CSP-S1 2022</h2>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>09-17</p>
</div></div><div class='timeline-item-content'><p>停课集训。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>09-18</p>
</div></div><div class='timeline-item-content'><p>停课集训。<br>
比赛。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>09-19</p>
</div></div><div class='timeline-item-content'><p>紧张的对答案。（我一共看到了 4、5 版答案…）</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>09-20</p>
</div></div><div class='timeline-item-content'><p>市内出成绩。（挺勤快的）</p>
</div></div></div>
<h3 id="CSP-S1-2022-赛后总结">CSP-S1 2022 赛后总结</h3>
<p>通过这次的比赛，我收获了很多。 主要有以下几点。</p>
<ol>
<li>戒骄戒躁，永远保持一颗虚心学习的心。</li>
<li>注重基础，永远保持一颗求知求实的心。</li>
<li>认真学习，认识到学习是自己的事情。</li>
<li>如果你总是想着怎么“摸鱼”，那你真的有可能在考试时“爆零”！</li>
</ol>
<h2 id="CSP-S2-2022">CSP-S2 2022</h2>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-26</p>
</div></div><div class='timeline-item-content'><p>停课集训。<br>
晚上收到江苏取消考试通知~~（悲）~~。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-27</p>
</div></div><div class='timeline-item-content'><p>停课集训。<br>
上午收到江苏恢复比赛通知。<br>
中午出发前往南京考场附近的酒店。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-28</p>
</div></div><div class='timeline-item-content'><p>隔离集训。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-29</p>
</div></div><div class='timeline-item-content'><p>隔离集训。<br>
比赛。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-30</p>
</div></div><div class='timeline-item-content'><p>回到家中隔离。<br>
紧张的洛谷对答案。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-03</p>
</div></div><div class='timeline-item-content'><p>省内名单公示，成功晋级NOIP！</p>
</div></div></div>
<h3 id="CSP-S2-2022-赛后总结">CSP-S2 2022 赛后总结</h3>
<p>这次比赛真的在玩心跳，先说取消后来又恢复。<br>
今年的题相比去年难了不少（我是说提高组）。<br>
三道图论题是什么鬼？</p>
<h2 id="NOIP-2022">NOIP 2022</h2>
<p>NOIP 2022 零分祭<br>
freopen 注释了，寄！…</p>
<h3 id="NOIP-2022-赛后总结">NOIP 2022 赛后总结</h3>
<p>细心！细心！再细心！</p>
]]></content>
      <categories>
        <category>竞赛</category>
      </categories>
      <tags>
        <tag>OI</tag>
        <tag>CSP-S</tag>
        <tag>NOIP</tag>
      </tags>
  </entry>
  <entry>
    <title>CSP-S/NOIP 2023 比赛合集</title>
    <url>/posts/p8ux9ia6/</url>
    <content><![CDATA[<h2 id="背景">背景</h2>
<p><s>谁说高三不能参加的？</s></p>
<h2 id="CSP-S1-2023">CSP-S1 2023</h2>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>09-16</p>
</div></div><div class='timeline-item-content'><p>上午：服务普及组组的校园志愿者（我们学校是考点）<s>（社会实践）</s><br>
下午：被社团其他成员服务的提高组考生 <s>（被人偷拍了！！！）</s></p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>09-20</p>
</div></div><div class='timeline-item-content'><p>市内出成绩：试卷考点大调整，考失误了。虽然没过省线，但是我们学校第一，成功 <s>晋级</s> 保送 <s>（其他人在干什么？）</s> 。</p>
</div></div></div>
<h3 id="CSP-S1-2023-赛后总结">CSP-S1 2023 赛后总结</h3>
<p>踏实学习！不要认为自己很厉害。</p>
<h2 id="CSP-S2-2023">CSP-S2 2023</h2>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-20</p>
</div></div><div class='timeline-item-content'><p>停课<s>集训</s>。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-21</p>
</div></div><div class='timeline-item-content'><p>考试：感觉很简单？<br>
估分：95~115（60~80+35+0+0）</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-22</p>
</div></div><div class='timeline-item-content'><p>小图灵估分85：（50+35+0+0）<br>
洛谷估分95：（60+35+0+0）</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-23</p>
</div></div><div class='timeline-item-content'><p>CCF发布<a href="https://www.noi.cn/xw/2023-10-23/796608.shtml">《关于部分平台私自发布CSP-J/S 2023认证结果的公告》</a>。@某平台</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-29</p>
</div></div><div class='timeline-item-content'><p>省内晋级名单公布：成功晋级！<br>
预计全国二等奖。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-15</p>
</div></div><div class='timeline-item-content'><p>CCF发布<a href="https://www.noi.cn/xw/2023-11-15/798182.shtml">《CSP-J/S 2023第二轮评级规则》</a>，喜提全国二等奖（60+35+0+0）。<s>（话说应该是省一吧）</s></p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-19</p>
</div></div><div class='timeline-item-content'><p>CCF发布<a href="https://www.noi.cn/hjmd/mdgs/2023/2023-11-19/798228.shtml">《CCF CSP-J/S 2023第二轮认证评级名单》</a>，榜上有名了！</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-28</p>
</div></div><div class='timeline-item-content'><p>江苏省发省奖了：省二等奖 <s>（重演去年悲剧： <strong>你永远离省一差5分的事实</strong> ）</s></p>
</div></div></div>
<h3 id="CSP-S2-2023-赛后总结">CSP-S2 2023 赛后总结</h3>
<p>T1 分类讨论做的，有一种情况未讨论，直接看运气 <s>（结果CCF说我的运气实力为0）</s><br>
T2 队列暴力模拟，35pts意料之中。<br>
T3 大模拟竟然没时间写了。<br>
T4 只看了一眼。</p>
<p>今年复赛简单不少，只要细心就能拿很多步骤分。<br>
感觉还是要多多努力啊！</p>
<h2 id="NOIP-2023">NOIP 2023</h2>
<div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-17</p>
</div></div><div class='timeline-item-content'><p>停课<s>集训</s>。<br>
下午前往南京。<br>
高德推荐的宾馆在南航北2门，离入场的西门有1.7公里，环境还差…<br>
连夜改了西门门口的南京邦克多酒店。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-18</p>
</div></div><div class='timeline-item-content'><p>竞赛日<br>
预期得分：130（70+20+40+0）<br>
小图灵估分：90（70+20+0+0）</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-19</p>
</div></div><div class='timeline-item-content'><p>洛谷估分：95（70+20+5+0）</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-28</p>
</div></div><div class='timeline-item-content'><p>CCF发成绩了：90（70+20+0+0）<br>
复赛卡了省一线，联赛卡国二线？<s>然而并没有</s></p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>12-11</p>
</div></div><div class='timeline-item-content'><p>CCF发布<a href="https://www.noi.cn/xw/2023-12-11/810300.shtml">《NOIP 2023获奖规则和名额分配方案》</a>，<s>喜提全国四等奖。（话说应该有个省二吧）</s></p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>12-12</p>
</div></div><div class='timeline-item-content'><p>CCF发布<a href="https://www.noi.cn/hjmd/mdgs/2023/2023-12-12/810464.shtml">《NOIP 2023获奖名单》</a>，<s>但与我无关</s>。</p>
</div></div></div>
<h3 id="NOIP-2023-赛后总结">NOIP 2023 赛后总结</h3>
<p>T1 题面理解有误，“小 S 可以做以下操作任意多次（可以不做）：选择词典中的任意一个单词，交换其<br>
中任意两个字符。”被我理解成了一个单词只可以交换两个字母 <s>（考试的时候就犹豫了好久）</s>。结果 100pts-&gt;70pts <s>Ag-&gt;Null</s>。<br>
T2 只做对了3、4号点，意料之中。<br>
T3 没拿分，题面理解错了。<br>
T4 考试时想到了dp，没时间写了。</p>
<p>细心！细心！再细心！<br>
骗分！骗分！再骗分！</p>
<h2 id="OIer-的退役">OIer 的退役</h2>
<p><a href="/posts/endofoier">传送门</a></p>
]]></content>
      <categories>
        <category>竞赛</category>
      </categories>
      <tags>
        <tag>OI</tag>
        <tag>CSP-S</tag>
        <tag>NOIP</tag>
      </tags>
  </entry>
  <entry>
    <title>OIer 的退役</title>
    <url>/posts/endofoier/</url>
    <content><![CDATA[<p>随着 NOIP2023 的结束，我也正式迎来了退役。<br>
今天是2023年12月12日，我的18岁生日。<br>
今天是NOIP2023出成绩的日子，我的两年OI路就此结束。<br>
回顾过去的两年，正应了归有光先生的那句：“瞻顾遗迹，如在昨日，令人长号不自禁”…</p>
<p>2022年3月，我第一次接触到信息学奥林匹克竞赛。并下定决心开始学习。<br>
2022年9月，我第一次参加了 CSP-S1 。（离国一等奖差了 1 分）<br>
2022年10月，我参加了 CSP-S2 。（离国三等奖、省一等奖差了 5 分）<br>
2022年11月，我参加了 NOIP2022 。（喜提爆零）<br>
2023年3月，我参加了 徐州市程序设计大赛 。（高中 C++ 组一等奖）<br>
2023年4月，我带着 我的作品：<a href="/posts/d0e7b156/">QuickVerifies</a> 参加了 “领航杯”信息素养提升实践活动 。（计算思维项目 二等奖）<br>
2023年9月，我第二次参加了 CSP-S1 。（离国二等奖差了 0.5 分）<br>
2023年10月，我第二次参加了 CSP-S2 。（国二等奖、省二等奖）<br>
2023年11月，我第二次参加了 NOIP2023 。（离国三等奖差了 10 分）</p>
<p><s>也许这就是命，</s> 两年以来我似乎并没有获得什么真正好的奖项。而且每一次都是差一点二就能拿到更好的奖项。<br>
这其中 NOIP2023 也是最遗憾的一次，因为比赛时的一时糊涂，与国二等奖失之交臂。<br>
但无论如何，距离 2024年高考只有 <strong>177天</strong> 了。<br>
现在我需要做的就是尽我最大的努力，为自己的人生再拼一次！<br>
<s>南京信息工程大学，等我！</s></p>
<div align="right">
  <p>2023年12月12日</p>
  <p>于徐州培栋实验学校</p>
</div>
]]></content>
      <categories>
        <category>竞赛</category>
      </categories>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>QuickVerifies：一个基于 OpenCV 的健康验证系统</title>
    <url>/posts/d0e7b156/</url>
    <content><![CDATA[<div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">更新记录</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>QuickVerifies：一个基于 OpenCV 的健康验证系统</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-12-15 链接修复</p>
</div></div><div class='timeline-item-content'><ol>
<li>链接修复：文章跳转链接修复</li>
</ol>
</div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="项目简介">项目简介</h2>
<div class="note info flat"><p>项目还在开发中，尽情期待！</p>
<p>GitHub 链接：<a href="https://github.com/muyangplus/QuickVerifies">https://github.com/muyangplus/QuickVerifies</a></p>
</div>
<h2 id="第一步：前期准备">第一步：前期准备</h2>
<h3 id="安装：OpenCV-4-5-5">安装：OpenCV 4.5.5</h3>
<h4 id="Windows-安装">Windows 安装</h4>
<p>下载并安装到 D盘 根目录（安装到其他目录后请自行更改 CMakeLists.txt:10 的 OpenCV 路径）</p>
<blockquote>
<p><a href="https://github.com/opencv/opencv/releases/download/4.5.5/opencv-4.5.5-vc14_vc15.exe">https://github.com/opencv/opencv/releases/download/4.5.5/opencv-4.5.5-vc14_vc15.exe</a></p>
</blockquote>
<p>执行以下命令（安装到其他目录后请自行更改 OpenCV 路径）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">copy</span> D:\opencv\build\x64\vc15\bin\opencv_world455.dll <span class="variable">%windir%</span>\system32\opencv_world455.dll</span><br><span class="line"><span class="built_in">copy</span> D:\opencv\build\x64\vc15\bin\opencv_world455d.dll <span class="variable">%windir%</span>\system32\opencv_world455d.dll</span><br></pre></td></tr></table></figure>
<h4 id="Linux-安装">Linux 安装</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y cmake g++ wget unzip</span><br><span class="line">sudo apt install -y openssh-server build-essential gdb rsync make zip</span><br><span class="line">sudo apt install -y ninja-build</span><br><span class="line">sudo apt install -y build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev libtiff5-dev</span><br><span class="line">sudo apt install -y libgtk2.0-dev</span><br><span class="line">sudo apt install -y pkg-config</span><br><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget -O opencv-4.5.5.zip https://github.com/opencv/opencv/archive/refs/tags/4.5.5.zip</span><br><span class="line">unzip opencv-4.5.5.zip</span><br><span class="line"><span class="built_in">cd</span> opencv-4.5.5</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">sudo cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..</span><br><span class="line">sudo make -j8</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>吐槽：真的很慢</p>
<h3 id="安装：摄像头驱动">安装：摄像头驱动</h3>
<p>Linux 系统请手动安装摄像头驱动</p>
<h4 id="Linux-检测">Linux 检测</h4>
<p>执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /dev/video*</span><br></pre></td></tr></table></figure>
<p>如果你看到&quot;/dev/video0 /dev/video1&quot;表示有摄像头驱动。否则请安装驱动并重插摄像头。</p>
<h4 id="Windows-WLS2-下的-Linux-摄像头驱动安装">Windows WLS2 下的 Linux 摄像头驱动安装</h4>
<div class="note warning simple"><p>请自行参照<a href="/posts/c70684b4/">这篇文章</a>重编译Linux内核<br>
（我选择VMware：花这么长时间改内核都已经装好10台虚拟机了……）</p>
</div>
<h4 id="Linux-摄像头驱动安装">Linux 摄像头驱动安装</h4>
<p>如果摄像头支持<a href="http://www.ideasonboard.org/uvc/">UVC驱动</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install cheese</span><br><span class="line">sudo apt install webcam</span><br><span class="line">cheese</span><br></pre></td></tr></table></figure>
<p>如果你成功打开了摄像头则你已成功</p>
<h2 id="第二步：从-GitHub仓库下载源代码">第二步：从 GitHub仓库下载源代码</h2>
<blockquote>
<p><a href="https://github.com/muyangplus/QuickVerifies.git">https://github.com/muyangplus/QuickVerifies.git</a></p>
</blockquote>
<h2 id="Enjoy-it">Enjoy it!</h2>
<h2 id="文章附件">文章附件</h2>
<blockquote>
<p><a href="https://alist.muyangplus.repl.co/%E5%8D%9A%E5%AE%A2%E9%99%84%E4%BB%B6/QuickVerifies%EF%BC%9A%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8E%20OpenCV%20%E7%9A%84%E5%81%A5%E5%BA%B7%E9%AA%8C%E8%AF%81%E7%B3%BB%E7%BB%9F">云盘</a></p>
</blockquote>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>人工智能</tag>
        <tag>神经网络</tag>
        <tag>OpenCV</tag>
        <tag>实战项目</tag>
      </tags>
  </entry>
  <entry>
    <title>【原创题目】 A ? B Problem</title>
    <url>/posts/yctm0001/</url>
    <content><![CDATA[<h2 id="题目信息">题目信息</h2>
<ul>
<li>题目直达：<a href="https://www.luogu.com.cn/problem/U284476">U284476 A ? B Problem</a></li>
<li>难度：入门</li>
<li>考点：分支结构、循环结构</li>
</ul>
<h2 id="题目背景">题目背景</h2>
<p>小明是一名<strong>小学生</strong>，今天学习了四则运算。数学老师布置了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 道算术题作为今天的作业。但是小明显然写不完作业，因此他找到了会编程的你来帮他写一个程序完成作业。</p>
<h2 id="题目描述">题目描述</h2>
<p>我们将由两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>, 和一个字符 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span> 按 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 的顺序构成的一个字符串称为一道算术题。</p>
<p>你需要算出每道题目的答案并输出。但是如果题目没有答案（题目出错了），请输出 <code>No answer!</code></p>
<h2 id="输入格式">输入格式</h2>
<p>第一行输入一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>, 代表题目的数量。</p>
<p>接下来的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 行，每行都有一道算术题。</p>
<h2 id="输出格式">输出格式</h2>
<p>共 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 行，每行一个数字，表示算术题的答案。（对于无法整除的数据保留 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 位小数）</p>
<h2 id="样例-1">样例 #1</h2>
<h3 id="样例输入-1">样例输入 #1</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1+1</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-1">样例输出 #1</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h2 id="样例-2">样例 #2</h2>
<h3 id="样例输入-2">样例输入 #2</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1-1</span><br><span class="line">1*1</span><br><span class="line">1/1</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-2">样例输出 #2</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<h2 id="样例-3">样例 #3</h2>
<h3 id="样例输入-3">样例输入 #3</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">0/1</span><br><span class="line">1/0</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-3">样例输出 #3</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">No answer!</span><br></pre></td></tr></table></figure>
<h2 id="样例-4">样例 #4</h2>
<h3 id="样例输入-4">样例输入 #4</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1/2</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-4">样例输出 #4</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0.50</span><br></pre></td></tr></table></figure>
<h2 id="提示">提示</h2>
<table>
<thead>
<tr>
<th style="text-align:center">测试点</th>
<th style="text-align:center">分值</th>
<th style="text-align:center">时间限制</th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></th>
<th style="text-align:center">特殊性质</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ 1 $</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ + $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ - $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ * $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">3</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 100 $</td>
<td style="text-align:center">$ \le 100 $</td>
<td style="text-align:center">$ + $ $ - $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">4</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 100 $</td>
<td style="text-align:center">$ \le 100 $</td>
<td style="text-align:center">$ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">5</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 1000 $</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ + $ $ - $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ \le 1000 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">8</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 1000 $</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">9</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 1000 $</td>
<td style="text-align:center">$ \le 10^9 $</td>
<td style="text-align:center">$ + $ $ - $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">10</td>
<td style="text-align:center">500ms</td>
<td style="text-align:center">$ \le 5 * 10^5 $</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">10</td>
<td style="text-align:center">500ms</td>
<td style="text-align:center">$ \le 5 * 10^5 $</td>
<td style="text-align:center">$ \le 10^9 $</td>
<td style="text-align:center">$ + $ $ - $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">13 ~ 14</td>
<td style="text-align:center">12</td>
<td style="text-align:center">500ms</td>
<td style="text-align:center">$ \le 5 * 10^5 $</td>
<td style="text-align:center">$ \le 10^9 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td style="text-align:center">12</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ \le 10^9 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
</tbody>
</table>
<p><strong>评测时请开启 O2优化</strong></p>
]]></content>
      <categories>
        <category>C++</category>
        <category>题目</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>题目</tag>
        <tag>原创</tag>
        <tag>分支结构</tag>
        <tag>循环结构</tag>
      </tags>
  </entry>
  <entry>
    <title>【原创题目】 A ? B Problem（升级版）</title>
    <url>/posts/yctm0002/</url>
    <content><![CDATA[<h2 id="题目信息">题目信息</h2>
<ul>
<li>题目直达：<a href="https://www.luogu.com.cn/problem/U294406">U284476 A ? B Problem（升级版）</a></li>
<li>难度：普及−</li>
<li>考点：分支结构、循环结构、字符串</li>
</ul>
<h2 id="题目背景">题目背景</h2>
<p>其实本来只打算出一道<a href="/posts/yctm0001/">A ? B Problem</a>，考察字符拆分的，但没想到被人用scanf卡过去了，于是便有了这道题。</p>
<p>小明是一名<strong>小学生</strong>，今天学习了四则运算。数学老师布置了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 道算术题作为今天的作业。但是小明显然写不完作业，因此他找到了会编程的你来帮他写一个程序完成作业。</p>
<h2 id="题目描述">题目描述</h2>
<p>我们将由两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span> 和两个字符 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo></mrow><annotation encoding="application/x-tex">=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span></span></span> 按 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo></mrow><annotation encoding="application/x-tex">=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span></span></span> 的顺序构成的一个字符串称为一道算术题。</p>
<p>例如：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>1</mn><mo>=</mo></mrow><annotation encoding="application/x-tex">1+1=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span></span> 就是一道算术题。</p>
<p>你需要算出每道题目的答案并输出。但是有以下特例：</p>
<ol>
<li>如果这不是一道算术题，请输出 <code>ERROR : WP</code> 。</li>
<li>如果出现了未知符号，请输出 <code>ERROR : UK</code> 。</li>
<li>如果该算式无法算出答案（会造成程序卡死），请输出 <code>Warning : RE</code> 。</li>
<li>如果算式的计算结果不是整数，要保留 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 位小数。</li>
</ol>
<p>如果同时满足不止一种情况，请只输出序号最小的结果。</p>
<h2 id="输入格式">输入格式</h2>
<p>第一行输入一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>, 代表行数的数量。</p>
<p>接下来的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 行，每行都有一个字符串。</p>
<h2 id="输出格式">输出格式</h2>
<p>共 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 行，每行一个字符串，表示要输出的内容。</p>
<h2 id="样例-1">样例 #1</h2>
<h3 id="样例输入-1">样例输入 #1</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1+1=</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-1">样例输出 #1</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h2 id="样例-2">样例 #2</h2>
<h3 id="样例输入-2">样例输入 #2</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1-1=</span><br><span class="line">1*1=</span><br><span class="line">1/1=</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-2">样例输出 #2</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<h2 id="样例-3">样例 #3</h2>
<h3 id="样例输入-3">样例输入 #3</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">0/1=</span><br><span class="line">1/0=</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-3">样例输出 #3</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">Warning : RE</span><br></pre></td></tr></table></figure>
<h2 id="样例-4">样例 #4</h2>
<h3 id="样例输入-4">样例输入 #4</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1/2=</span><br><span class="line">1*1</span><br><span class="line">1&amp;1=</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-4">样例输出 #4</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0.50</span><br><span class="line">ERROR : WP</span><br><span class="line">ERROR : UK</span><br></pre></td></tr></table></figure>
<h2 id="提示">提示</h2>
<p>本题共有两个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>a</mi><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">Task</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，每个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>a</mi><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">Task</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 满分均为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn></mrow><annotation encoding="application/x-tex">100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span> 分。</p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>a</mi><mi>s</mi><mi>k</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">Task0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">0</span></span></span></span> 的说明如下：</p>
</blockquote>
<p>共 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 个节点（节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>−</mo><mn>19</mn></mrow><annotation encoding="application/x-tex">16-19</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">16</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">19</span></span></span></span>），全部正确得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn></mrow><annotation encoding="application/x-tex">100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span> 分，否则不得分。</p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>a</mi><mi>s</mi><mi>k</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">Task1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">1</span></span></span></span> 的测试节数据如下：</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">测试点</th>
<th style="text-align:center">分值</th>
<th style="text-align:center">时间限制</th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></th>
<th style="text-align:center">特殊性质</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ 1 $</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ + $</td>
<td style="text-align:center">保证没有任何错误</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ - $</td>
<td style="text-align:center">保证没有任何错误</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ * $</td>
<td style="text-align:center">保证没有任何错误</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ \le 10 $</td>
<td style="text-align:center">$ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">3</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 100 $</td>
<td style="text-align:center">$ \le 100 $</td>
<td style="text-align:center">$ + $ $ - $</td>
<td style="text-align:center">保证没有任何错误</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">4</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 100 $</td>
<td style="text-align:center">$ \le 100 $</td>
<td style="text-align:center">$ * $ $ / $</td>
<td style="text-align:center">保证没有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>a</mi><mi>r</mi><mi>n</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow><annotation encoding="application/x-tex">Warning</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Wa</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">nin</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span> 错误</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">5</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 1000 $</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ + $ $ - $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ \le 1000 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">8</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 1000 $</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">9</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 1000 $</td>
<td style="text-align:center">$ \le 10^9 $</td>
<td style="text-align:center">$ + $ $ - $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">10</td>
<td style="text-align:center">500ms</td>
<td style="text-align:center">$ \le 5 * 10^5 $</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">10</td>
<td style="text-align:center">500ms</td>
<td style="text-align:center">$ \le 5 * 10^5 $</td>
<td style="text-align:center">$ \le 10^9 $</td>
<td style="text-align:center">$ + $ $ - $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">13 ~ 14</td>
<td style="text-align:center">12</td>
<td style="text-align:center">500ms</td>
<td style="text-align:center">$ \le 5 * 10^5 $</td>
<td style="text-align:center">$ \le 10^9 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td style="text-align:center">12</td>
<td style="text-align:center">1000ms</td>
<td style="text-align:center">$ \le 10^6 $</td>
<td style="text-align:center">$ \le 10^9 $</td>
<td style="text-align:center">$ + $ $ - $ $ * $ $ / $</td>
<td style="text-align:center">无</td>
</tr>
</tbody>
</table>
<p>上述的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 并不包含其他的特殊符号。</p>
<p><strong>评测时请开启 O2优化</strong></p>
]]></content>
      <categories>
        <category>C++</category>
        <category>题目</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>题目</tag>
        <tag>原创</tag>
        <tag>分支结构</tag>
        <tag>循环结构</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>加密测试</title>
    <url>/posts/53963325/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="10cc022125b467ec35d66a395eac22108bb492d32e702528c3f8920fd608322d">bd25ed9264b080267271e137e33d0ce1951f5fbafb8d10f85092992d6139dd8b1d3eb851afe070e471b42eaa39d64958a1df3c2210dd12a233d58ca71cd056daa67e09dbcedb967c3c9ab3a4e634204024fdf261c93ca60d524fac6c1328bbb7d0ba802c4a768c213ff5a7de60effb8746d4128b7f9c016f2b406a63e68292ba22c3a670002d608c3208491c2c5c1980452628cdbc0f1f5d61a523d8aa5ef2b5809e4a8d80841d0dd63b555d78888fc19f825ac1014bee4567b61343c4f87e822f48de94a43a75debb4c7b2d2ecd3c7b</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">点我输入密码【密码:test】</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>加密内容</tag>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>如何搭建一个高速私人网盘</title>
    <url>/posts/a683aef4/</url>
    <content><![CDATA[<h2 id="第一步：先期准备">第一步：先期准备</h2>
<h3 id="快速开始">快速开始</h3>
<p>请确保你有以下所有账号</p>
<ul>
<li>一个 <a href="https://signup.live.com/signup">OneDrive(微软)账号</a></li>
<li>一个 <a href="https://github.com/signup">GitHub账号</a></li>
<li>一个 <a href="https://vercel.com/signup">Vercel账号</a>（可使用 <a href="https://github.com/signup">GitHub账号</a> 注册）</li>
</ul>
<h3 id="注册-OneDrive-微软-账号">注册 OneDrive (微软) 账号</h3>
<div class="note simple"><p>本小结请选择阅读</p>
</div>
<h4 id="选择说明">选择说明</h4>
<mark class="hl-label red">使用OneDrive账号时一定要注意账号类型！</mark> 
<p>不同类型的OneDrive账号的区别(仅针对本目的)：</p>
<table>
<thead>
<tr>
<th>OneDrive账号类型</th>
<th>难易程度</th>
<th>安全性</th>
<th>免费容量</th>
</tr>
</thead>
<tbody>
<tr>
<td>个人账号</td>
<td>简单</td>
<td>安全</td>
<td>5GB</td>
</tr>
<tr>
<td>临时教育账号</td>
<td>繁琐</td>
<td>不安全</td>
<td>1TB</td>
</tr>
<tr>
<td>教育账号(无法自行注册)</td>
<td>繁琐</td>
<td>安全</td>
<td>1TB</td>
</tr>
</tbody>
</table>
<h4 id="个人账号">个人账号</h4>
<blockquote>
<p>OneDrive(微软)账号注册链接 <a href="https://signup.live.com/signup">https://signup.live.com/signup</a></p>
</blockquote>
<h4 id="临时教育账号">临时教育账号</h4>
<blockquote>
<p>临时教育邮箱注册链接（一定要保留！！！） <a href="https://obagg.com">https://obagg.com</a></p>
</blockquote>
<div class="note warning simple"><p>用户名越复杂越好<br>
域类型请选择 <mark class="hl-label green">@5tb.tech</mark></p>
</div>
<blockquote>
<p>教育OneDrive(微软)账号注册链接 <a href="https://www.microsoft.com/zh-cn/education/products/office">https://www.microsoft.com/zh-cn/education/products/office</a></p>
</blockquote>
<h4 id="教育账号">教育账号</h4>
<blockquote>
<p>教育OneDrive(微软)账号注册链接 <a href="https://www.microsoft.com/zh-cn/education/products/office">https://www.microsoft.com/zh-cn/education/products/office</a></p>
</blockquote>
<h3 id="注册Github账号">注册Github账号</h3>
<blockquote>
<p>GitHub账号注册链接 <a href="https://github.com/signup">https://github.com/signup</a></p>
</blockquote>
<h3 id="注册Vercel账号">注册Vercel账号</h3>
<blockquote>
<p>Vercel账号注册链接 <a href="https://vercel.com/signup">https://vercel.com/signup</a></p>
</blockquote>
<h2 id="第二步：在-Vercel-中导入和部署">第二步：在 Vercel 中导入和部署</h2>
<p>将 onedrive-vercel-index GitHub 项目导入 Vercel</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">https://github.com/spencerwooo/onedrive-vercel-index.git</span><br></pre></td></tr></table></figure>
<p>然后点击部署。Vercel 将自动构建和部署您的项目。但是，部署可能会失败，因为您尚未添加环境变量，这就是我们接下来要做的。<mark class="hl-label default">REDIS_URL</mark> <br>
如图：<br>
<img src="/assets/image/posts/a683aef4/2.1.1%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%82%A8%E5%BA%93.png" alt="导入第三方储库1"><br>
<img src="/assets/image/posts/a683aef4/2.1.2%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%82%A8%E5%BA%93.png" alt="导入第三方储库2"><br>
<img src="/assets/image/posts/a683aef4/2.1.3%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%82%A8%E5%BA%93.png" alt="导入第三方储库3"></p>
<h2 id="第三步：创建-Redis-连接">第三步：创建 Redis 连接</h2>
<p>创建一个 Redis 数据库，并将 Redis 实例的 URL 设置为 Vercel 项目内的环境变量。Redis 数据库用于存储所需的内容以及与 OneDrive 的 API 接口时。<mark class="hl-label default">REDIS_URL</mark>  <mark class="hl-label default">access_tokens</mark>  <mark class="hl-label default">refresh_tokens</mark> </p>
<p>您可以使用 Upstash 来实现此目的，完全免费，与Vercel完全集成，这是我所演示的。<br>
您还可以托管任何Redis服务器，使用AWS，Google Cloud，Azure等。只要你有一个Vercel可以使用的Redis URL。<br>
无论你使用什么方法，在 Vercel 的环境变量中都应该有一个存在，它应该看起来像这样：<mark class="hl-label default">REDIS_URL</mark> </p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">redis://:xxx...@some-thing-like-35533.upstash.io:35533</span><br></pre></td></tr></table></figure>
<p>或：</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">rediss://:xxx...@some-thing-like-35533.upstash.io:35533</span><br></pre></td></tr></table></figure>
<h3 id="使用-Upstash-来创建-Redis-连接">使用 Upstash 来创建 Redis 连接</h3>
<blockquote>
<p><a href="https://docs.upstash.com/redis/howto/vercelintegration">官方文档</a></p>
</blockquote>
<ol>
<li>将集成添加到您的 Vercel 帐户<br>
访问 Vercel <a href="https://vercel.com/integrations/upstash">Upstash Integration</a> 网页，然后单击按钮。选择要集成的范围和应用程序。</li>
<li>链接数据库<br>
Vercel将显示一个弹出窗口，您可以在其中注册Upstash。然后，如果没有数据库，则可以创建一个数据库。<br>
<img src="https://docs.upstash.com/img/getting_started/create.png" alt="创建数据库"></li>
<li>拥有数据库后，您将看到一个页面，您可以在其中将Upstash数据库映射到Vercel应用程序。选择数据库和项目后，单击<mark class="hl-label default">New Integration</mark> 。<br>
<img src="https://docs.upstash.com/img/vercel/linkdb.png" alt="链接数据库"></li>
<li>现在点击，这样弹出窗口将关闭，您将返回到您的Vercel页面。<br>
<img src="https://docs.upstash.com/img/vercel/integration.png" alt="新建项目"></li>
<li>获取你的 Redis 链接<br>
<img src="/assets/image/posts/a683aef4/redis.png" alt="获取 Redis 链接"></li>
</ol>
<h2 id="第四步：配置网站">第四步：配置网站</h2>
<h3 id="可选步骤：设置-swig￼13">可选步骤：设置<mark class="hl-label default">NEXT_PUBLIC_USER_PRINCIPLE_NAME</mark> </h3>
<mark class="hl-label red">如果你使用的是临时教育账号，你必需额外执行此步骤</mark> 
<p>打开 Vercel 项目的 设置(Settings) 。选择 环境变量(Environment Variables)</p>
<mark class="hl-label default">Name</mark>  填 <mark class="hl-label default">NEXT_PUBLIC_USER_PRINCIPLE_NAME</mark> 
<mark class="hl-label default">VALUE</mark>  填 你的临时教育账号
<p>单击 添加(Add)</p>
<h3 id="可选步骤：自定义域名">可选步骤：自定义域名</h3>
<blockquote>
<p><a href="https://vercel.com/docs/concepts/projects/custom-domains">https://vercel.com/docs/concepts/projects/custom-domains</a></p>
</blockquote>
<h3 id="修改配置">修改配置</h3>
<p>需要进行一些基本的配置修改。两个配置文件包括 <mark class="hl-label default">config/site.config.js</mark>  和<mark class="hl-label default">config/api.config.js</mark>  。前者用于自定义您的网站，后者用于配置API路由。</p>
<h4 id="自定义网站设置">自定义网站设置</h4>
<p>根据您的配置修改 <mark class="hl-label default">config/site.config.js</mark> <br>
您必须更改：</p>
<ul>
<li>
<mark class="hl-label default">userPrincipalName</mark> 
<p>用于在进行OAuth时验证您的身份。它通常是您登录 OneDrive 时的 Microsoft 电子邮件地址。<br>
注：如果你在之前的步骤中设置了<mark class="hl-label default">NEXT_PUBLIC_USER_PRINCIPLE_NAME</mark> 那你可以将此处留空或设为你的常用邮箱，否则你必需将此设置为你的 OneDrive(微软)账号</p>
</li>
<li>
<mark class="hl-label default">baseDirectory</mark> 
<p>使用 onedrive-vercel-index 共享的基本文件夹。你必须确保该文件夹存在于你的 OneDrive 中。（你还可以创建一个在 OneDrive 中命名的文件夹，以保持与主项目相同的内容。<mark class="hl-label default">Public</mark> </p>
</li>
</ul>
<div class="note primary simple"><p>还有其他可选配置可用于自定义站点，请参阅 <a href="https://ovi.swo.moe/docs/custom-configs">自定义</a> 配置以了解其功能。</p>
</div>
<h3 id="可选步骤：修改-API-设置">可选步骤：修改 API 设置</h3>
<mark class="hl-label red">如果你是 OneDrive 国际版用户（不是 OneDrive 商业版或教育版帐户，不是 SharePoint 用户，不是 Microsoft 365 E5 用户），你可以忽略此步骤并保持原样，否则，你必须执行此步骤</mark> 
<h4 id="如果你使用的是-个人-Outlook-微软-账户">如果你使用的是 个人 Outlook(微软)账户</h4>
<p>你需要修改 <mark class="hl-label default">config/api.config.js</mark> </p>
<ul>
<li>
<p>authApi 和 driveApi</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">authApi: &quot;https://login.partner.microsoftonline.cn/common/oauth2/v2.0/token&quot;,</span><br><span class="line">driveApi: &quot;https://microsoftgraph.chinacloudapi.cn/v1.0/me/drive&quot;,</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="如果你使用的是-临时-教育-Outlook-微软-账户">如果你使用的是 (临时)教育 Outlook(微软)账户</h4>
<p>你不需要做任何改动</p>
<h2 id="第五步：验证您的-onedrive-vercel-index">第五步：验证您的 onedrive-vercel-index</h2>
<p>导航到 vercel 新部署的 onedrive-vercel 索引，如果尚未设置自定义域，通常是 <a href="https://xxx.vercel.app">https://xxx.vercel.app</a> 。由于您尚未通过身份验证，您将被重定向到OAuth进程。</p>
<h3 id="准备">准备</h3>
<p>检查有关已定义配置的任何不正确之处。特别是 和 （混淆），如果您使用 (临时)教育 Outlook(微软)账户 进行身份验证，则应该与主项目完全相同。还要检查 API 范围，只需要：<mark class="hl-label default">client_id</mark>  , <mark class="hl-label default">client_secret</mark> </p>
<ul>
<li>user.read：用于根据您用于OAuth的帐户检查您的电子邮件，以便某些人一遍又一遍地使用ta的帐户重新进行身份验证来“轰炸”你。</li>
<li>files.read.all：用于访问 OneDrive 中的文件。</li>
<li>offline_access： 离线访问<br>
如果一切似乎正确，请继续执行步骤 2。如果没有，则需要在 Vercel 上修改和重新部署<mark class="hl-label default">config/api.config.js</mark> 。</li>
</ul>
<h3 id="获取身份验证代码">获取身份验证代码</h3>
<p>基于我们为您生成了OAuth链接。单击该链接，将打开一个新选项卡，并提示您登录到您的Microsoft帐户。确保使用您在 中定义的同一帐户登录。</p>
<div class="note warning simple"><p>如果您的帐户存在权限问题，则可能需要使用自己的帐户进行身份验证。这可能发生在 OneDrive 教育或业务用户身上。有关此内容的更多信息，请单击此处：<a href="https://ovi.swo.moe/docs/advanced#using-your-own-clientid-and-clientsecret-1">使用自己的客户端 ID 和机密</a>。</p>
</div>
<p>您将被定向到 ，将地址栏中的整个URL复制到下面的输入部分。onedrive-vercel-index 将从 URL 中提取 需要的信息。单击“获取令牌”以继续。</p>
<h3 id="获取访问和刷新令牌">获取访问和刷新令牌</h3>
<p>稍等片刻，因为令牌需要一点才能返回。如果一切顺利，您将收到以下消息：成功屏幕，其中包含一对有效令牌，供您存储在Redis数据库中。单击“存储令牌”以继续。</p>
<div class="note red icon simple"><i class="note-icon fas fa-bullhorn"></i><p>在这里，我们将验证您是否真的是您，因此，如果按钮显示“不要假装是网站所有者”，请更改 <mark class="hl-label default">NEXT_PUBLIC_USER_PRINCIPLE_NAME</mark>  或 <mark class="hl-label default">userPrincipalName</mark></p>
</div>
<p>最后，您将被重定向到 onedrive-vercel-index。Enjoy it！</p>
<div class="note warning simple"><p>如果您被重定向回步骤1，并且您确定所有内容都已正确设置，请稍等片刻，然后尝试手动导航回家并进行硬刷新。令牌有时需要一段时间才能传播到 Redis。</p>
</div>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<p><a href="https://ovi.swo.moe/docs/getting-started">https://ovi.swo.moe/docs/getting-started</a><br>
<a href="https://docs.upstash.com/redis/howto/vercelintegration">https://docs.upstash.com/redis/howto/vercelintegration</a></p>
</blockquote>
]]></content>
      <categories>
        <category>干货</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Vercel</tag>
        <tag>教程</tag>
        <tag>OneDrive</tag>
        <tag>Upstash</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让你的 Windows WSL 连接摄像头</title>
    <url>/posts/c70684b4/</url>
    <content><![CDATA[<div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">更新记录</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><div class="timeline"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>如何让你的 Windows WSL 连接摄像头</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-12-20 链接更新</p>
</div></div><div class='timeline-item-content'><ol>
<li>部分链接更新</li>
</ol>
</div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="快速开始">快速开始</h2>
<div class="note danger simple"><p>本文尚未完工！！！</p>
</div>
<h2 id="第一步：下载文件（本步骤尚不完全）">第一步：下载文件（本步骤尚不完全）</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 你需要安装的东西</span></span><br><span class="line">sudo apt upgrade</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt-get install pkg-config</span><br><span class="line">sudo apt-get install libncurses*</span><br><span class="line">sudo apt-get install flex</span><br><span class="line">sudo apt-get install bison</span><br><span class="line">sudo apt-get build-dep linux</span><br><span class="line">sudo apt-get install libncurses-dev flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf fakeroot</span><br><span class="line"><span class="comment"># 创建：kernel文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> ~/kernel</span><br><span class="line"><span class="comment"># 打开：kernel文件夹</span></span><br><span class="line"><span class="built_in">cd</span> ~/kernel</span><br><span class="line"><span class="comment"># 清华大学镜像：linux内核</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/kernel/v5.x/linux-5.10.60.tar.xz</span><br><span class="line"><span class="comment"># 解压：linux内核</span></span><br><span class="line">tar -xf linux-5.10.60.tar.xz</span><br><span class="line"><span class="comment"># 清华大学镜像：rt补丁</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/kernel/projects/rt/5.10/older/patch-5.10.100-rt62.patch.gz</span><br><span class="line"><span class="comment"># 解压：rt补丁</span></span><br><span class="line">gunzip patch-5.10.100-rt62.patch.gz</span><br><span class="line"><span class="comment"># 打开：linux内核文件夹</span></span><br><span class="line"><span class="built_in">cd</span> linux-5.10.100</span><br><span class="line"><span class="comment"># 博主网盘镜像：wsl-config</span></span><br><span class="line">wget -O .config https://alist.muyangplus.repl.co/d/Guest/%E5%8D%9A%E5%AE%A2%E9%99%84%E4%BB%B6/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84%20Windows%20WSL%20%E8%BF%9E%E6%8E%A5%E6%91%84%E5%83%8F%E5%A4%B4/.config?sign=j3sbdeMoFJaCWNDP_VPqQOcg_MqrelT1I1IpjtUiopI=:0</span><br><span class="line"><span class="comment"># 安装：rt补丁</span></span><br><span class="line">patch -p1 &lt; ../patch-5.10.100-rt62.patch</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">│ Symbol: USB_CONFIGFS_F_UVC [=n]                                                                     │</span><br><span class="line">│ Type  : bool                                                                                        │</span><br><span class="line">│ Defined at drivers/usb/gadget/Kconfig:448                                                           │</span><br><span class="line">│   Prompt: USB Webcam function                                                                       │</span><br><span class="line">│   Depends on: USB_SUPPORT [=y] &amp;&amp; USB_GADGET [=n] &amp;&amp; USB_CONFIGFS [=n] &amp;&amp; VIDEO_V4L2 [=n] &amp;&amp; VIDEO_ │</span><br><span class="line">│   Location:                                                                                         │</span><br><span class="line">│     -&gt; Device Drivers                                                                               │</span><br><span class="line">│       -&gt; USB support (USB_SUPPORT [=y])                                                             │</span><br><span class="line">│ (1)     -&gt; USB Gadget Support (USB_GADGET [=n])                                                     │</span><br><span class="line">│           -&gt; USB Gadget functions configurable through configfs (USB_CONFIGFS [=n])                 │</span><br><span class="line">│ Selects: VIDEOBUF2_VMALLOC [=n] &amp;&amp; USB_F_UVC [=n]                                                   │</span><br><span class="line">│                                                                                                     │</span><br><span class="line">│                                                                                                     │</span><br><span class="line">│ Symbol: USB_F_UVC [=n]                                                                              │</span><br><span class="line">│ Type  : tristate                                                                                    │</span><br><span class="line">│ Defined at drivers/usb/gadget/Kconfig:204                                                           │</span><br><span class="line">│   Depends on: USB_SUPPORT [=y] &amp;&amp; USB_GADGET [=n]                                                   │</span><br><span class="line">│ Selected by [n]:                                                                                    │</span><br><span class="line">│   - USB_CONFIGFS_F_UVC [=n] &amp;&amp; USB_SUPPORT [=y] &amp;&amp; USB_GADGET [=n] &amp;&amp; USB_CONFIGFS [=n] &amp;&amp; VIDEO_V4 │</span><br><span class="line">│   - USB_G_WEBCAM [=n] &amp;&amp; USB_SUPPORT [=y] &amp;&amp; USB_GADGET [=n] &amp;&amp; VIDEO_V4L2 [=n]</span><br></pre></td></tr></table></figure>
<h2 id="第二步：">第二步：</h2>
<blockquote>
<p>参考（明明是照搬）:<br>
<a href="https://docs.microsoft.com/zh-cn/windows/wsl/connect-usb">https://docs.microsoft.com/zh-cn/windows/wsl/connect-usb</a></p>
</blockquote>
<ol>
<li>Windows 安装：<a href="https://github.com/dorssel/usbipd-win/releases/download/v2.3.0/usbipd-win_2.3.0.msi">usbipd-win</a></li>
<li>Linux 安装：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install linux-tools-5.4.0-77-generic hwdata</span><br><span class="line">sudo update-alternatives --install /usr/local/bin/usbip usbip /usr/lib/linux-tools/5.4.0-77-generic/usbip 20</span><br></pre></td></tr></table></figure>
</li>
<li>Windows 命令：找到你的摄像头<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">usbipd wsl list</span><br></pre></td></tr></table></figure>
</li>
<li>Windows 命令：选择要附加到 WSL 的设备总线 ID，然后运行此命令。 WSL 会提示你输入密码以运行 sudo 命令。 要附加的 Linux 发行版必须是默认分发版。 (参阅 <a href="https://docs.microsoft.com/zh-cn/windows/wsl/basic-commands#set-default-linux-distribution">comands FOR WSL Doc Basic</a> ，以更改默认分发) 。<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">usbipd wsl attach <span class="literal">--busid</span> &lt;busid&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>Linux 命令：打开 Ubuntu（或首选的 WSL 命令行），使用以下命令列出附加的 USB 设备：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsusb</span><br></pre></td></tr></table></figure>
</li>
<li>用完后请移除，否则 Windows 将无法继续使用<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">usbipd wsl detach <span class="literal">--busid</span> &lt;busid&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>参考资料：<br>
<a href="https://zhuanlan.zhihu.com/p/509248038">https://zhuanlan.zhihu.com/p/509248038</a><br>
<a href="https://blog.csdn.net/weixin_34408918/article/details/116737822">https://blog.csdn.net/weixin_34408918/article/details/116737822</a></p>
<h2 id="文章附件">文章附件</h2>
<blockquote>
<p><a href="https://alist.muyangplus.repl.co/%E5%8D%9A%E5%AE%A2%E9%99%84%E4%BB%B6/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84%20Windows%20WSL%20%E8%BF%9E%E6%8E%A5%E6%91%84%E5%83%8F%E5%A4%B4">云盘</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>建站公告</title>
    <url>/posts/43ee71e3/</url>
    <content><![CDATA[<h2 id="关于“我”，请到-关于本站-about-页面查看">关于“我”，请到 <a href="/about/">关于本站(about)</a> 页面查看</h2>
<h3 id="免责声明">免责声明</h3>
<div class="note default simple"><p>本站页面的部分内容，包括但不限于图片、音频、视频，来源于网络。由于无法深究其原作者，因此未曾署名。若您是部分内容原作者，且不希望本站使用，可联系本人删除。</p>
</div>
<h4 id="最终解释权归-沐阳先生-所有">最终解释权归 @沐阳先生 所有</h4>
]]></content>
      <categories>
        <category>站务</category>
      </categories>
      <tags>
        <tag>公告</tag>
      </tags>
  </entry>
  <entry>
    <title>编程思维周练(2)</title>
    <url>/posts/27bee4fc/</url>
    <content><![CDATA[<h2 id="比赛详情">比赛详情</h2>
<ul>
<li>链接：<a href="https://www.luogu.com.cn/contest/103209">编程思维周练(2)</a></li>
<li>赛制：IOI</li>
<li>难度：入门</li>
</ul>
<h2 id="题目解答">题目解答</h2>
<h3 id="A-CSP-J2020-优秀的拆分"><a href="https://www.luogu.com.cn/problem/P7071?contestId=103209">A : [CSP-J2020] 优秀的拆分</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll a[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt; <span class="number">30</span>; i++)&#123;</span><br><span class="line">    a[i] = a[i - <span class="number">1</span>] * <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">29</span>; i &gt;= <span class="number">1</span>; i--)&#123;</span><br><span class="line">    <span class="keyword">if</span>(n &gt;= a[i])&#123;</span><br><span class="line">      n -= a[i];</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h3 id="B-CSP-J-2022-乘方"><a href="https://www.luogu.com.cn/problem/P8813?contestId=103209">B : [CSP-J 2022] 乘方</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">  ll ans = <span class="built_in">pow</span>(a,b);</span><br><span class="line">  <span class="keyword">if</span>(ans &gt; <span class="number">1e9</span> || ans &lt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h3 id="C-NOI-Online-2022-入门组-王国比赛"><a href="https://www.luogu.com.cn/problem/P8254?contestId=103209">C : [NOI Online 2022 入门组] 王国比赛</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1009</span>;</span><br><span class="line"><span class="type">int</span> n, m, t, ans[maxn], cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">      ans[j] += t;</span><br><span class="line">    &#125; </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    ans[i] *= <span class="number">2</span>;</span><br><span class="line"><span class="comment">//    printf(&quot;%d &quot;, ans[i]);</span></span><br><span class="line">    <span class="keyword">if</span>((t &amp;&amp; (ans[i] &gt; m)) || (!t &amp;&amp; (ans[i] &lt; m)))&#123;</span><br><span class="line">      cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, cnt);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>社团</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>社团</tag>
      </tags>
  </entry>
  <entry>
    <title>编程思维周练(1)</title>
    <url>/posts/c93b73f/</url>
    <content><![CDATA[<h2 id="比赛详情">比赛详情</h2>
<ul>
<li>链接：<a href="https://www.luogu.com.cn/contest/102813">编程思维周练(1)</a></li>
<li>赛制：OI</li>
<li>难度：入门</li>
</ul>
<h2 id="题目解答">题目解答</h2>
<h3 id="A-NOIP2002-普及组-级数求和"><a href="https://www.luogu.com.cn/problem/P1035?contestId=102813">A : [NOIP2002 普及组] 级数求和</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> k = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">  <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">  <span class="keyword">while</span>(sum &lt;= k)&#123;</span><br><span class="line">    sum += <span class="number">1.0</span>/++n;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="B-NOIP1997-普及组-棋盘问题"><a href="https://www.luogu.com.cn/problem/P1548?contestId=102813">B : [NOIP1997 普及组] 棋盘问题</a></h3>
<h4 id="暴力枚举">暴力枚举</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> k = i; k &lt;= n; k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> p = j; p &lt;= m; p++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(k-i == p-j)&#123;</span><br><span class="line">            ans1++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123;</span><br><span class="line">            ans2++;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, ans1, ans2);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="公式求解">公式求解</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> n,m;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">  <span class="type">int</span> sum2=((m+<span class="number">1</span>)*(n+<span class="number">1</span>)*m*n)/<span class="number">4</span>;</span><br><span class="line">  <span class="type">int</span> sum1=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(;n&gt;=<span class="number">1</span>&amp;&amp;m&gt;=<span class="number">1</span>;n--,m--)</span><br><span class="line">  &#123;</span><br><span class="line">    sum1+=m*n;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,sum1,sum2-sum1);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="C-NOIP2011-普及组-数字反转"><a href="https://www.luogu.com.cn/problem/P1307?contestId=102813">C : [NOIP2011 普及组] 数字反转</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  string str;</span><br><span class="line">  cin &gt;&gt; str;</span><br><span class="line">  <span class="keyword">if</span>(str == <span class="string">&quot;0&quot;</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> len = str.<span class="built_in">length</span>();</span><br><span class="line">  <span class="keyword">while</span>(str[--len] == <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = len; i &gt; <span class="number">0</span>; i--)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = len; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="D-NOIP2016-普及组-买铅笔"><a href="https://www.luogu.com.cn/problem/P1909?contestId=102813">D : [NOIP2016 普及组] 买铅笔</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX_INT = <span class="number">2e10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> n = <span class="number">0</span>, ans = MAX_INT;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, s = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="keyword">if</span>(n % a == <span class="number">0</span>)&#123;</span><br><span class="line">      s = n / a * b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      s = (n / a + <span class="number">1</span>) * b;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = <span class="built_in">min</span>(ans, s);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="E-数字反转（升级版）"><a href="https://www.luogu.com.cn/problem/P1553?contestId=102813">E : 数字反转（升级版）</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">char</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">          cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">            p = s[i];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x = cnt;</span><br><span class="line">    cnt--;</span><br><span class="line">    <span class="keyword">while</span>(s[cnt] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; cnt &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    cnt--;</span><br><span class="line">  &#125; </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = cnt; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">      cout &lt;&lt; s[i];</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">if</span>(p == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; p;</span><br><span class="line">    <span class="keyword">if</span>(p == <span class="string">&#x27;%&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125; </span><br><span class="line">    <span class="type">int</span> m = s.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(s[x + <span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; x &lt; m - <span class="number">1</span>)&#123;</span><br><span class="line">      x++;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">while</span>(s[m] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; m &gt; x + <span class="number">1</span>)&#123;</span><br><span class="line">      m--;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = m; i &gt; x; i--)&#123;</span><br><span class="line">      cout &lt;&lt; s[i];</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>社团</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>社团</tag>
      </tags>
  </entry>
  <entry>
    <title>编程思维周练(3)</title>
    <url>/posts/sad23j8s/</url>
    <content><![CDATA[<h2 id="比赛详情">比赛详情</h2>
<ul>
<li>链接：<a href="https://www.luogu.com.cn/contest/105785">编程思维周练(3)</a></li>
<li>赛制：IOI</li>
<li>难度：入门</li>
</ul>
<h2 id="题目解答">题目解答</h2>
<h3 id="A-NOI-Online-2021-入门组-切蛋糕"><a href="https://www.luogu.com.cn/problem/P7471?contestId=105785">A : [NOI Online 2021 入门组] 切蛋糕</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> cin&gt;&gt;t;</span><br><span class="line"> <span class="keyword">while</span>(t--)</span><br><span class="line"> &#123;</span><br><span class="line">  cin&gt;&gt;a[<span class="number">0</span>]&gt;&gt;a[<span class="number">1</span>]&gt;&gt;a[<span class="number">2</span>];</span><br><span class="line">  <span class="built_in">sort</span>(a,a+<span class="number">3</span>);</span><br><span class="line">  <span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="number">0</span>&amp;&amp;a[<span class="number">1</span>]==<span class="number">0</span>) cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="number">0</span>&amp;&amp;a[<span class="number">1</span>]==a[<span class="number">2</span>]) cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="number">0</span>&amp;&amp;a[<span class="number">1</span>]!=a[<span class="number">2</span>]) cout&lt;&lt;<span class="number">2</span>&lt;&lt;endl;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a[<span class="number">0</span>]+a[<span class="number">1</span>]==a[<span class="number">2</span>]) cout&lt;&lt;<span class="number">2</span>&lt;&lt;endl;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a[<span class="number">0</span>]==a[<span class="number">1</span>]||a[<span class="number">1</span>]==a[<span class="number">2</span>]||a[<span class="number">0</span>]==a[<span class="number">2</span>]) cout&lt;&lt;<span class="number">2</span>&lt;&lt;endl;</span><br><span class="line">  <span class="keyword">else</span> cout&lt;&lt;<span class="number">3</span>&lt;&lt;endl;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="B-NOIP2015-普及组-扫雷游戏"><a href="https://www.luogu.com.cn/problem/P2670?contestId=105785">B : [NOIP2015 普及组] 扫雷游戏</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> x,y,num=<span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> input; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line"> <span class="type">int</span> map[x+<span class="number">2</span>][y+<span class="number">2</span>];</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=y;j++)&#123;</span><br><span class="line">   map[i][j]=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=y;j++)&#123;</span><br><span class="line">   cin&gt;&gt;input;</span><br><span class="line">   <span class="keyword">if</span>(input==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(map[i<span class="number">-1</span>][j<span class="number">-1</span>]!=<span class="number">-1</span>)map[i<span class="number">-1</span>][j<span class="number">-1</span>]++;</span><br><span class="line">    <span class="keyword">if</span>(map[i<span class="number">-1</span>][j]!=<span class="number">-1</span>)map[i<span class="number">-1</span>][j]++;</span><br><span class="line">    <span class="keyword">if</span>(map[i<span class="number">-1</span>][j+<span class="number">1</span>]!=<span class="number">-1</span>)map[i<span class="number">-1</span>][j+<span class="number">1</span>]++;</span><br><span class="line">    <span class="keyword">if</span>(map[i][j<span class="number">-1</span>]!=<span class="number">-1</span>)map[i][j<span class="number">-1</span>]++;</span><br><span class="line">    map[i][j]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(map[i][j+<span class="number">1</span>]!=<span class="number">-1</span>)map[i][j+<span class="number">1</span>]++;</span><br><span class="line">    <span class="keyword">if</span>(map[i+<span class="number">1</span>][j<span class="number">-1</span>]!=<span class="number">-1</span>)map[i+<span class="number">1</span>][j<span class="number">-1</span>]++;</span><br><span class="line">    <span class="keyword">if</span>(map[i+<span class="number">1</span>][j]!=<span class="number">-1</span>)map[i+<span class="number">1</span>][j]++;</span><br><span class="line">    <span class="keyword">if</span>(map[i+<span class="number">1</span>][j+<span class="number">1</span>]!=<span class="number">-1</span>)map[i+<span class="number">1</span>][j+<span class="number">1</span>]++;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=y;j++)&#123;</span><br><span class="line">   <span class="keyword">if</span>(map[i][j]==<span class="number">-1</span>)&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    cout&lt;&lt;map[i][j];</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout&lt;&lt;endl;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="C-A-B-Problem"><a href="https://www.luogu.com.cn/problem/U284476?contestId=105785">C : A ? B Problem</a></h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string str;</span><br><span class="line"><span class="type">int</span> ptr = <span class="number">0</span>, len = <span class="number">0</span>;</span><br><span class="line">ll n = <span class="number">0</span>, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isNum</span><span class="params">(<span class="type">char</span> ch)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">if</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="type">long</span> <span class="type">long</span> num = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">while</span> (<span class="built_in">isNum</span>(str[ptr])) &#123;</span><br><span class="line">  num *= <span class="number">10</span>;</span><br><span class="line">  num += str[ptr++] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (ptr &gt; len) <span class="keyword">break</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="comment">//freopen(&quot;.in&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line"> <span class="comment">//freopen(&quot;.out&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line"> <span class="type">char</span> c;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line"> <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">  cin &gt;&gt; str;</span><br><span class="line">  len = str.<span class="built_in">length</span>();</span><br><span class="line">  ptr = <span class="number">0</span>;</span><br><span class="line">  a = <span class="built_in">getNum</span>();</span><br><span class="line">  c = str[ptr++];;</span><br><span class="line">  b = <span class="built_in">getNum</span>();</span><br><span class="line"><span class="comment">//printf(&quot;%lld %c %lld\n&quot;, a, c, b);</span></span><br><span class="line">  <span class="keyword">switch</span>(c)&#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, a+b);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, a-b);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, a*b);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;No answer!\n&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a % b)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, <span class="built_in">double</span>(a*<span class="number">1.00</span>/b));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, a/b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>社团</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>社团</tag>
      </tags>
  </entry>
  <entry>
    <title>编程思维社团</title>
    <url>/posts/pdgzxxst/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="b03fded4075bad58609c458117b40eda80e762947193ff8d207475b47453fa2f">b54a13cf305a6e6425a2353077555afb61f3d5fa394b5f9a736c6e2639538c6f7b43d42f157f1a961993c197be2085fa448681dc67a99e82b805aca8274e2b9afd8444e5a7af9e123d32e3fefb9e2d7fc896e49db2f0f34c85ca4911e806b788b5c136b761cc115c88b6a6fc3806043cc648fdd8bb2e0a665d623e6d8ebe0aee913949e53d8b0524c9bf3246805b3df58b01a97e3a7bda66fd82f6ee806cff03fb62a7ef29ecc0c20f2c33810dd71f0aee7cdd9a4a5edf4282052eca78bb3fb5e96d3ae1b2b04071162b975dfc53f7a90cb4e0282ec3c417dd3bc3b633fe2ef27b13ba11bb8ddec641aeb156d123cb19bb13a0cad3f73bdd65db5da730da3cd9fd4bb31f9dd62a7251e01349c1dc9bfafc53700cc7c40aaa1a84f0b0ded6f7912a0b1dcb5b8c3fdbe308777ab9deef7ec471713fd97b500fe1416d2ed4ed1420d7cb9d34c2aa4cc4b801e3221a969b18acffcd7e657c8ff48cd5a8de0959ebdfdca97bb2371e0b2348973eb8f328f697fa7c42bcc28f0463682b09c22d359b75057d5b944a95535e35e481012215b0569e539095bd47261e1a51377863a23aba9427c3076c2e7ad507cab2e6fb33b86637a156c7a51b5cb718b1fee76accde961f297f213b80966becc53c1249b2560b83aaa68ab816bb8f0a5ea9978833264162234be75bce84fedbc4d1a146c9dfcd8431a6cd071adff385425f6213ca53d3fa80d2b00ff294b6c8e4f3aa1833fc15c8e2fcfa5943b78d8aa9602ae685d4577c90b416bda050cdcac32a861c428091fada070b43a44ac19dc58e07db3c14822cc37808bed177e1394b5e6e25d09fd7ae6daa78185e6111548b5d758a747573b40215457ce691784286e77b8b5cf2dc72369d7cb1969185c869da642bd8b810540e196e6abb7c3dc3824ff8a116690a15567fe6be65f0f69613c9012efe42b6c1adfbbb02beba86384262c4e8c4f62a7316ef7060e70f649322eb2023a2fa595a199752f66fabe00995b3f2d616efcd591d7d32e80660c68813261cf90bc80013d154b9830fe54dc47ee5877f340f36fba5f22000b026b9b6575fd25748cc0a544b482d36cae65ce6d1412cfbc13a3a8720969e11ca8702092637a4b956f78f4271d8c3ef595c683bdce7fbb175f7239a8b29f2a6a7b2d23f944ceed8640a14a91736214743195ef523ae4c2f506b0727097eb6481375b3802e4b8b937af002a22629ba6186bd10b65df1322f7a213ead366f53ea6326d049fdbb93df2b1a281af9c08ca41a749db7e43033265940af977effe25194e29f771e354651f79aebba448aeaac9638692349a136422e90fabd6bdf22c42ac8e78052fb40da9fa157f2237b736ae88e00e49f0f7cc6bb730c6c02c9f50ff392a589b4c874c99926c5b09927eec44f073c400e98fce3f73e732536b717291ecc853405c03bcd9cb2b85ba9696b871538e249717958fb5caaf206ae757641c07cc398aa74aa012658b7c0dc90ba2b4979770617ab213cc350f19a3d1e2709ab89efa6d18f25f20270724ed293ea79138c123cf0ba6d148a83ff2fb711a9912d306c301754b424e2fa1598121b308992e5bdf0c972079de12813b855c3d99671d32f74b7923a35dba54888ab15c429629add05a7c90efccdc10f1ba5dd263b590b9dd4a1548267f773ec345132a0b0a8a0e1a27a6d9ba4ab8a25babbd60638d0747d61a50414df64998bc51a0ba1bfbf7d20a80b0c4f197916259a65d0cf54da0cf9974cacc338dc87f71ff94b3a6385469cfd206014f9e6c6e35fe17c118b5f66d82383ceea9cee0317790ec995deae94e7ece6af8c14ad215919d7240de8432512c0405ecc1b4edfd4e083a725bb85b39e2b4cacf2eaf967ba4b3ba4861e648307f4969160c9af6d12903294767783fc4795a25cdfb8462a082701ae8c4e059b8a6f72d8b3dace04f82d786ac1cbd3cadf3ebbd1825b689bc905dade68c1265637f7989d64689a91c3511764dbfebf5e88db054920af39fbe12bef88e06820bcee9d7b12d0dfa8885ff02a0e4187045699742ee8b92503be006a058aa6508ad1140b085716b289e904710b3102e2940358e0640b6eb0feb8847c224fc59e628402c43e3a46b80d3efc99058897a4c905aa895672b1350d583ba29becfa834fb22bd0ef4fc25715efc1d2c99955a44bb83001706dd7270ff48436f5b4df7c0018ee3d631696a37a60ad139107577a2bcfa5705b326c65544eda92ea53f4c23f5b6da9a0eb83db19222cdf34ec947560f090c0e3f748954be0207ed3286bb005965fedd761c668a373dcde35a3e62035485546f316b78f9d2ec40111944ccb25d0eff9bc128e1fc080a6b8876ec962d554662dafe58bec29b0f0aa81e8524d39bea80e8fa8f8d6b8de37743fcf19b8ebfd310a78d8f28dce99154a91a4a7941f2f531dc02ce306b611a8eb7dc07b9cedf07ac633b4a03360f6aaba5d3a3d44551fb47e35567c79f6b542f0119087b6c3ad22c98e349d5ce1019f0ddf2e115cff6138b9a18231314fb57759a7aaf03989b0764eb436edc1264e6b8ae7cdb6fd466f295d432c5ccf0cd91ac205d61da75878d7df3c39a0adc878efcadc9d9c648a66ccd4625fc3973bad000c53fa7db8c69e8a7a2c96a7ae2822386508016203ce8fff23d02b0099051c339d384d9ec95823a53e14cd98d1d25ec3cff5ef4a4747862d1103b1ed7b1d83bcebb2551613d47373c3f15ea1f06ef2c934f8aaad04c249f16e482a7cbcac56d434219dbbed4380212ec00b54925394356cde76bfce7f6348c123c3099205c90bc8e2d3e578b958921bc3c0fc9853d63d6558998218cfc663e765a98f454afca1bc612e42d1790fc9328d421dcc5f773a41b1a76fd394260ced88b059b69ec76a86c26992f9c447427ad8c9b090afd5e5689d34cbfe9b86965de247ade6da1c29365068e4b21f99c838c0b6301c9393c150e05bec476e8a003578129dd783bdf4e77ec34feeff8d2f5dd2a4a8227809e38123c288b52c57276b1f1a0cbf917cbe28b753423ad925f19c90b2f79aa194a7963de9f0b4f38a32b8b5bc50fcfc517c5c0b31a8bfcabebeb1b126d895bed340041f1a354b4bbd094ba88af533ef35faa3e5d32387cfdd6316bb9c044e818d10c733f41448faf9269128094ab75ef1e484046d757a4429928f57a589cf1cceac9b2cfcd2d2b6554fb8f431a60bfbb81d061a78b44e52d17ae7c61e79544cc91f</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是一个加密文档，请输入访问密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>社团</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习</tag>
        <tag>社团</tag>
      </tags>
  </entry>
</search>
